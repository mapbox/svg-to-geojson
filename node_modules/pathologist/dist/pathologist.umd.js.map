{"version":3,"file":null,"sources":["../node_modules/svg-parser/dist/svg-parser.es.js","../src/utils/object.js","../src/convertToPath.js","../src/applyAttributes.js","../src/applyClasses.js","../node_modules/svgpath/lib/path_parse.js","../node_modules/svgpath/lib/matrix.js","../node_modules/svgpath/lib/transform_parse.js","../node_modules/svgpath/lib/a2c.js","../node_modules/svgpath/lib/ellipse.js","../node_modules/svgpath/lib/svgpath.js","../node_modules/svgpath/index.js","../src/applyTransforms.js","../src/walk.js","../src/stringify.js","../src/index.js"],"sourcesContent":["function getLocator ( source ) {\n\tvar originalLines = source.split( '\\n' );\n\n\tvar start = 0;\n\tvar lineRanges = originalLines.map( function ( line, i ) {\n\t\tvar end = start + line.length + 1;\n\t\tvar range = { start: start, end: end, line: i };\n\n\t\tstart = end;\n\t\treturn range;\n\t});\n\n\tvar i = 0;\n\n\tfunction rangeContains ( range, index ) {\n\t\treturn range.start <= index && index < range.end;\n\t}\n\n\tfunction getLocation ( range, index ) {\n\t\treturn { line: range.line, column: index - range.start, character: index };\n\t}\n\n\treturn function locate ( search, startIndex ) {\n\t\tif ( typeof search === 'string' ) {\n\t\t\tsearch = source.indexOf( search, startIndex || 0 );\n\t\t}\n\n\t\tvar range = lineRanges[i];\n\n\t\tvar d = search >= range.end ? 1 : -1;\n\n\t\twhile ( range ) {\n\t\t\tif ( rangeContains( range, search ) ) return getLocation( range, search );\n\n\t\t\ti += d;\n\t\t\trange = lineRanges[i];\n\t\t}\n\t};\n}\n\nfunction locate ( source, search, startIndex ) {\n\treturn getLocator( source )( search, startIndex );\n}\n\nvar validNameCharacters = /[a-zA-Z0-9:-]/;\nvar whitespace = /[\\s\\t\\r\\n]/;\nvar quotemark = /['\"]/;\n\nfunction repeat ( str, i ) {\n\tvar result = '';\n\twhile ( i-- ) result += str;\n\treturn result;\n}\n\nfunction parse ( source ) {\n\tvar match = /^<\\?.+?\\?>/.exec( source );\n\tvar metadata = match ? match[0] : '';\n\n\tvar stack = [];\n\n\tvar state = neutral;\n\tvar currentElement = null;\n\tvar root = null;\n\n\tfunction error ( message ) {\n\t\tvar ref = locate( source, i );\n\t\tvar line = ref.line;\n\t\tvar column = ref.column;\n\t\tvar before = source.slice( 0, i ).replace( /^\\t+/, function (match) { return repeat( '  ', match.length ); } );\n\t\tvar beforeLine = /(^|\\n).*$/.exec( before )[0];\n\t\tvar after = source.slice( i );\n\t\tvar afterLine = /.*(\\n|$)/.exec( after )[0];\n\n\t\tvar snippet = \"\" + beforeLine + afterLine + \"\\n\" + (repeat( ' ', beforeLine.length )) + \"^\";\n\n\t\tthrow new Error( (message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug in svg-parser. Please raise an issue at https://gitlab.com/Rich-Harris/svg-parser/issues â€“ thanks!\\n\\n\" + snippet) );\n\t}\n\n\tfunction neutral () {\n\t\tvar text = '';\n\t\twhile ( i < source.length && source[i] !== '<' ) text += source[ i++ ];\n\n\t\tif ( /\\S/.test( text ) ) {\n\t\t\tcurrentElement.children.push( text );\n\t\t}\n\n\t\tif ( source[i] === '<' ) {\n\t\t\treturn tag;\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction tag () {\n\t\tif ( source[i] === '!' ) {\n\t\t\treturn comment;\n\t\t}\n\n\t\tif ( source[i] === '/' ) {\n\t\t\treturn closingTag;\n\t\t}\n\n\t\tvar name = getName();\n\n\t\tvar element = {\n\t\t\tname: name,\n\t\t\tattributes: {},\n\t\t\tchildren: []\n\t\t};\n\n\t\tif ( currentElement ) {\n\t\t\tcurrentElement.children.push( element );\n\t\t} else {\n\t\t\troot = element;\n\t\t}\n\n\t\tvar attribute;\n\t\twhile ( i < source.length && ( attribute = getAttribute() ) ) {\n\t\t\telement.attributes[ attribute.name ] = attribute.value;\n\t\t}\n\n\t\tvar selfClosing = false;\n\n\t\tif ( source[i] === '/' ) {\n\t\t\ti += 1;\n\t\t\tselfClosing = true;\n\t\t}\n\n\t\tif ( source[i] !== '>' ) {\n\t\t\terror( 'Expected >' );\n\t\t}\n\n\t\tif ( !selfClosing ) {\n\t\t\tcurrentElement = element;\n\t\t\tstack.push( element );\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction comment () {\n\t\tvar index = source.indexOf( '-->', i );\n\t\tif ( !~index ) error( 'expected -->' );\n\n\t\ti = index + 3;\n\t\treturn neutral;\n\t}\n\n\tfunction closingTag () {\n\t\tvar name = getName();\n\n\t\tif ( !name ) error( 'Expected tag name' );\n\n\t\tif ( name !== currentElement.name ) {\n\t\t\terror( (\"Expected closing tag </\" + name + \"> to match opening tag <\" + (currentElement.name) + \">\") );\n\t\t}\n\n\t\tif ( source[i] !== '>' ) {\n\t\t\terror( 'Expected >' );\n\t\t}\n\n\t\tstack.pop();\n\t\tcurrentElement = stack[ stack.length - 1 ];\n\n\t\treturn neutral;\n\t}\n\n\tfunction getName () {\n\t\tvar name = '';\n\t\twhile ( i < source.length && validNameCharacters.test( source[i] ) ) name += source[ i++ ];\n\n\t\treturn name;\n\t}\n\n\tfunction getAttribute () {\n\t\tif ( !whitespace.test( source[i] ) ) return null;\n\t\tallowSpaces();\n\n\t\tvar name = getName();\n\t\tif ( !name ) return null;\n\n\t\tvar value = true;\n\n\t\tallowSpaces();\n\t\tif ( source[i] === '=' ) {\n\t\t\ti += 1;\n\t\t\tallowSpaces();\n\n\t\t\tvalue = getAttributeValue();\n\t\t\tif ( !isNaN( value ) ) value = +value; // TODO whitelist numeric attributes?\n\t\t}\n\n\t\treturn { name: name, value: value };\n\t}\n\n\tfunction getAttributeValue () {\n\t\treturn quotemark.test( source[i] ) ?\n\t\t\tgetQuotedAttributeValue() :\n\t\t\tgetUnquotedAttributeValue();\n\t}\n\n\tfunction getUnquotedAttributeValue () {\n\t\tvar value = '';\n\t\tdo {\n\t\t\tvar char = source[i];\n\t\t\tif ( char === ' ' || char === '>' || char === '/' ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvalue += char;\n\t\t\ti += 1;\n\t\t} while ( i < source.length );\n\n\t\treturn value;\n\t}\n\n\tfunction getQuotedAttributeValue () {\n\t\tvar quotemark = source[ i++ ];\n\n\t\tvar value = '';\n\t\tvar escaped = false;\n\n\t\twhile ( i < source.length ) {\n\t\t\tvar char = source[ i++ ];\n\t\t\tif ( char === quotemark && !escaped ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif ( char === '\\\\' && !escaped ) {\n\t\t\t\tescaped = true;\n\t\t\t}\n\n\t\t\tvalue += escaped ? (\"\\\\\" + char) : char;\n\t\t\tescaped = false;\n\t\t}\n\t}\n\n\tfunction allowSpaces () {\n\t\twhile ( i < source.length && whitespace.test( source[i] ) ) i += 1;\n\t}\n\n\tvar i = metadata.length;\n\twhile ( i < source.length ) {\n\t\tif ( !state ) error( 'Unexpected character' );\n\t\tstate = state();\n\t\ti += 1;\n\t}\n\n\tif ( state !== neutral ) {\n\t\terror( 'Unexpected end of input' );\n\t}\n\n\tif ( root.name === 'svg' ) root.metadata = metadata;\n\treturn root;\n}\n\nexport { parse };\n//# sourceMappingURL=svg-parser.es.js.map\n","const assign = Object.assign || function assign ( source, ...targets ) {\n\ttargets.forEach( target => {\n\t\tObject.keys( target ).forEach( key => {\n\t\t\tsource[ key ] = target[ key ];\n\t\t});\n\t});\n};\n\nfunction cloneExcept ( obj, props ) {\n\tlet clone = {};\n\tObject.keys( obj ).forEach( prop => {\n\t\tif ( !~props.indexOf( prop ) ) clone[ prop ] = obj[ prop ];\n\t});\n\treturn clone;\n}\n\nexport { assign, cloneExcept };\n","import { cloneExcept } from './utils/object.js';\n\nfunction line ( points ) {\n\tlet path = '';\n\tlet prefix = 'M';\n\n\tfor ( let i = 0; i < points.length; i += 2 ) {\n\t\tpath += `${prefix}${points[i]},${points[i+1]}`;\n\t\tprefix = ' ';\n\t}\n\n\treturn path;\n}\n\nconst converters = {\n\tellipse: attributes => {\n\t\tconst cx = attributes.cx || 0;\n\t\tconst cy = attributes.cy || 0;\n\t\tconst rx = attributes.rx || 0;\n\t\tconst ry = attributes.ry || 0;\n\n\t\tconst path = cloneExcept( attributes, [ 'cx', 'cy', 'rx', 'ry' ] );\n\t\tpath.d = `M${cx - rx},${cy}a${rx},${ry} 0 1,0 ${rx * 2},0a${rx},${ry} 0 1,0 ${rx * -2},0`;\n\n\t\treturn path;\n\t},\n\n\tcircle: attributes => {\n\t\tconst cx = attributes.cx || 0;\n\t\tconst cy = attributes.cy || 0;\n\t\tconst r = attributes.r || 0;\n\n\t\tconst path = cloneExcept( attributes, [ 'cx', 'cy', 'r' ] );\n\t\tpath.d = `M${cx - r},${cy}a${r},${r} 0 1,0 ${r * 2},0a${r},${r} 0 1,0 ${r * -2},0`;\n\n\t\treturn path;\n\t},\n\n\tpolygon: attributes => {\n\t\tconst path = converters.polyline( attributes );\n\t\tpath.d += 'Z';\n\n\t\treturn path;\n\t},\n\n\tpolyline: attributes => {\n\t\tconst path = cloneExcept( attributes, 'points' );\n\t\tpath.d = line( attributes.points.trim().split( /[\\s,]+/ ) );\n\n\t\treturn path;\n\t},\n\n\trect: attributes => {\n\t\tconst x = +attributes.x || 0;\n\t\tconst y = +attributes.y || 0;\n\t\tconst width = +attributes.width || 0;\n\t\tconst height = +attributes.height || 0;\n\t\t// const rx = +attributes.rx || 0; // TODO handle...\n\t\t// const ry = +attributes.ry || 0; // TODO handle...\n\n\t\tconst path = cloneExcept( attributes, [ 'x', 'y', 'width', 'height', 'rx', 'ry' ] );\n\n\t\t// TODO handle rx and ry\n\t\tpath.d = `m${x},${y} ${width},0 0,${height} ${-width},0Z`;\n\n\t\treturn path;\n\t},\n\n\tline: attributes => {\n\t\tconst path = cloneExcept( attributes, [ 'x1', 'y1', 'x2', 'y2' ]);\n\t\tpath.d = line([ attributes.x1 || 0, attributes.y1 || 0, attributes.x2 || 0, attributes.y2 || 0 ]);\n\n\t\treturn path;\n\t}\n\n\t// TODO others...\n};\n\nexport default function convert ( node ) {\n\tconst converter = converters[ node.name ];\n\tif ( converter ) {\n\t\tconst attributes = converter( node.attributes );\n\n\t\treturn {\n\t\t\tname: 'path',\n\t\t\tattributes\n\t\t};\n\t}\n\n\tthrow new Error( `TODO <${node.name}>` );\n}\n","import { assign } from './utils/object.js';\n\nexport default function applyAttributes ( node, attributes ) {\n\tnode.attributes = assign( attributes, node.attributes );\n}\n","import { assign } from './utils/object.js';\n\nexport default function applyClasses ( node, classes ) {\n\tif ( node.attributes.class ) {\n\t\tclasses = assign( {}, classes );\n\n\t\tnode.attributes.class.split( ' ' )\n\t\t\t.filter( Boolean )\n\t\t\t.forEach( className => classes[ className ] = true );\n\t}\n\n\tconst classList = Object.keys( classes ).join( ' ' );\n\n\tif ( classList ) {\n\t\tnode.attributes.class = classList;\n\t}\n}\n","'use strict';\n\n\nvar paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0 };\n\nvar SPECIAL_SPACES = [\n  0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006,\n  0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF\n];\n\nfunction isSpace(ch) {\n  return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029) || // Line terminators\n    // White spaces\n    (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n    (ch >= 0x1680 && SPECIAL_SPACES.indexOf(ch) >= 0);\n}\n\nfunction isCommand(code) {\n  /*eslint-disable no-bitwise*/\n  switch (code | 0x20) {\n    case 0x6D/* m */:\n    case 0x7A/* z */:\n    case 0x6C/* l */:\n    case 0x68/* h */:\n    case 0x76/* v */:\n    case 0x63/* c */:\n    case 0x73/* s */:\n    case 0x71/* q */:\n    case 0x74/* t */:\n    case 0x61/* a */:\n    case 0x72/* r */:\n      return true;\n  }\n  return false;\n}\n\nfunction isDigit(code) {\n  return (code >= 48 && code <= 57);   // 0..9\n}\n\nfunction isDigitStart(code) {\n  return (code >= 48 && code <= 57) || /* 0..9 */\n          code === 0x2B || /* + */\n          code === 0x2D || /* - */\n          code === 0x2E;   /* . */\n}\n\n\nfunction State(path) {\n  this.index  = 0;\n  this.path   = path;\n  this.max    = path.length;\n  this.result = [];\n  this.param  = 0.0;\n  this.err    = '';\n  this.segmentStart = 0;\n  this.data   = [];\n}\n\nfunction skipSpaces(state) {\n  while (state.index < state.max && isSpace(state.path.charCodeAt(state.index))) {\n    state.index++;\n  }\n}\n\n\nfunction scanParam(state) {\n  var start = state.index,\n      index = start,\n      max = state.max,\n      zeroFirst = false,\n      hasCeiling = false,\n      hasDecimal = false,\n      hasDot = false,\n      ch;\n\n  if (index >= max) {\n    state.err = 'SvgPath: missed param (at pos ' + index + ')';\n    return;\n  }\n  ch = state.path.charCodeAt(index);\n\n  if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n    index++;\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  // This logic is shamelessly borrowed from Esprima\n  // https://github.com/ariya/esprimas\n  //\n  if (!isDigit(ch) && ch !== 0x2E/* . */) {\n    state.err = 'SvgPath: param should start with 0..9 or `.` (at pos ' + index + ')';\n    return;\n  }\n\n  if (ch !== 0x2E/* . */) {\n    zeroFirst = (ch === 0x30/* 0 */);\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n\n    if (zeroFirst && index < max) {\n      // decimal number starts with '0' such as '09' is illegal.\n      if (ch && isDigit(ch)) {\n        state.err = 'SvgPath: numbers started with `0` such as `09` are ilegal (at pos ' + start + ')';\n        return;\n      }\n    }\n\n    while (index < max && isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasCeiling = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x2E/* . */) {\n    hasDot = true;\n    index++;\n    while (isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasDecimal = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x65/* e */ || ch === 0x45/* E */) {\n    if (hasDot && !hasCeiling && !hasDecimal) {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      index++;\n    }\n    if (index < max && isDigit(state.path.charCodeAt(index))) {\n      while (index < max && isDigit(state.path.charCodeAt(index))) {\n        index++;\n      }\n    } else {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n  }\n\n  state.index = index;\n  state.param = parseFloat(state.path.slice(start, index)) + 0.0;\n}\n\n\nfunction finalizeSegment(state) {\n  var cmd, cmdLC;\n\n  // Process duplicated commands (without comand name)\n\n  // This logic is shamelessly borrowed from Raphael\n  // https://github.com/DmitryBaranovskiy/raphael/\n  //\n  cmd   = state.path[state.segmentStart];\n  cmdLC = cmd.toLowerCase();\n\n  var params = state.data;\n\n  if (cmdLC === 'm' && params.length > 2) {\n    state.result.push([ cmd, params[0], params[1] ]);\n    params = params.slice(2);\n    cmdLC = 'l';\n    cmd = (cmd === 'm') ? 'l' : 'L';\n  }\n\n  if (cmdLC === 'r') {\n    state.result.push([ cmd ].concat(params));\n  } else {\n\n    while (params.length >= paramCounts[cmdLC]) {\n      state.result.push([ cmd ].concat(params.splice(0, paramCounts[cmdLC])));\n      if (!paramCounts[cmdLC]) {\n        break;\n      }\n    }\n  }\n}\n\n\nfunction scanSegment(state) {\n  var max = state.max, cmdCode, comma_found,\n            need_params, i;\n\n  state.segmentStart = state.index;\n  cmdCode = state.path.charCodeAt(state.index);\n\n  if (!isCommand(cmdCode)) {\n    state.err = 'SvgPath: bad command ' + state.path[state.index] + ' (at pos ' + state.index + ')';\n    return;\n  }\n\n  need_params = paramCounts[state.path[state.index].toLowerCase()];\n\n  state.index++;\n  skipSpaces(state);\n\n  state.data = [];\n\n  if (!need_params) {\n    // Z\n    finalizeSegment(state);\n    return;\n  }\n\n  comma_found = false;\n\n  for (;;) {\n    for (i = need_params; i > 0; i--) {\n      scanParam(state);\n      if (state.err.length) {\n        return;\n      }\n      state.data.push(state.param);\n\n      skipSpaces(state);\n      comma_found = false;\n\n      if (state.index < max && state.path.charCodeAt(state.index) === 0x2C/* , */) {\n        state.index++;\n        skipSpaces(state);\n        comma_found = true;\n      }\n    }\n\n    // after ',' param is mandatory\n    if (comma_found) {\n      continue;\n    }\n\n    if (state.index >= state.max) {\n      break;\n    }\n\n    // Stop on next segment\n    if (!isDigitStart(state.path.charCodeAt(state.index))) {\n      break;\n    }\n  }\n\n  finalizeSegment(state);\n}\n\n\n/* Returns array of segments:\n *\n * [\n *   [ command, coord1, coord2, ... ]\n * ]\n */\nmodule.exports = function pathParse(svgPath) {\n  var state = new State(svgPath);\n  var max = state.max;\n\n  skipSpaces(state);\n\n  while (state.index < max && !state.err.length) {\n    scanSegment(state);\n  }\n\n  if (state.err.length) {\n    state.result = [];\n\n  } else if (state.result.length) {\n\n    if ('mM'.indexOf(state.result[0][0]) < 0) {\n      state.err = 'SvgPath: string should start with `M` or `m`';\n      state.result = [];\n    } else {\n      state.result[0][0] = 'M';\n    }\n  }\n\n  return {\n    err: state.err,\n    segments: state.result\n  };\n};\n","'use strict';\n\n// combine 2 matrixes\n// m1, m2 - [a, b, c, d, e, g]\n//\nfunction combine(m1, m2) {\n  return [\n    m1[0] * m2[0] + m1[2] * m2[1],\n    m1[1] * m2[0] + m1[3] * m2[1],\n    m1[0] * m2[2] + m1[2] * m2[3],\n    m1[1] * m2[2] + m1[3] * m2[3],\n    m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n    m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n}\n\n\nfunction Matrix() {\n  if (!(this instanceof Matrix)) { return new Matrix(); }\n  this.queue = [];   // list of matrixes to apply\n  this.cache = null; // combined matrix cache\n}\n\n\nMatrix.prototype.matrix = function (m) {\n  if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0) {\n    return this;\n  }\n  this.cache = null;\n  this.queue.push(m);\n  return this;\n};\n\n\nMatrix.prototype.translate = function (tx, ty) {\n  if (tx !== 0 || ty !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, 0, 1, tx, ty ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.scale = function (sx, sy) {\n  if (sx !== 1 || sy !== 1) {\n    this.cache = null;\n    this.queue.push([ sx, 0, 0, sy, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.rotate = function (angle, rx, ry) {\n  var rad, cos, sin;\n\n  if (angle !== 0) {\n    this.translate(rx, ry);\n\n    rad = angle * Math.PI / 180;\n    cos = Math.cos(rad);\n    sin = Math.sin(rad);\n\n    this.queue.push([ cos, sin, -sin, cos, 0, 0 ]);\n    this.cache = null;\n\n    this.translate(-rx, -ry);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewX = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewY = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\n// Flatten queue\n//\nMatrix.prototype.toArray = function () {\n  if (this.cache) {\n    return this.cache;\n  }\n\n  if (!this.queue.length) {\n    this.cache = [ 1, 0, 0, 1, 0, 0 ];\n    return this.cache;\n  }\n\n  this.cache = this.queue[0];\n\n  if (this.queue.length === 1) {\n    return this.cache;\n  }\n\n  for (var i = 1; i < this.queue.length; i++) {\n    this.cache = combine(this.cache, this.queue[i]);\n  }\n\n  return this.cache;\n};\n\n\n// Apply list of matrixes to (x,y) point.\n// If `isRelative` set, `translate` component of matrix will be skipped\n//\nMatrix.prototype.calc = function (x, y, isRelative) {\n  var m, i, len;\n\n  // Don't change point on empty transforms queue\n  if (!this.queue.length) { return [ x, y ]; }\n\n  // Calculate final matrix, if not exists\n  //\n  // NB. if you deside to apply transforms to point one-by-one,\n  // they should be taken in reverse order\n\n  if (!this.cache) {\n    this.cache = this.toArray();\n  }\n\n  m = this.cache;\n\n  // Apply matrix to point\n  return [\n    x * m[0] + y * m[2] + (isRelative ? 0 : m[4]),\n    x * m[1] + y * m[3] + (isRelative ? 0 : m[5])\n  ];\n};\n\n\nmodule.exports = Matrix;\n","'use strict';\n\n\nvar Matrix = require('./matrix');\n\nvar operations = {\n  matrix: true,\n  scale: true,\n  rotate: true,\n  translate: true,\n  skewX: true,\n  skewY: true\n};\n\nvar CMD_SPLIT_RE    = /\\s*(matrix|translate|scale|rotate|skewX|skewY)\\s*\\(\\s*(.+?)\\s*\\)[\\s,]*/;\nvar PARAMS_SPLIT_RE = /[\\s,]+/;\n\n\nmodule.exports = function transformParse(transformString) {\n  var matrix = new Matrix();\n  var cmd, params;\n\n  // Split value into ['', 'translate', '10 50', '', 'scale', '2', '', 'rotate',  '-45', '']\n  transformString.split(CMD_SPLIT_RE).forEach(function (item) {\n\n    // Skip empty elements\n    if (!item.length) { return; }\n\n    // remember operation\n    if (typeof operations[item] !== 'undefined') {\n      cmd = item;\n      return;\n    }\n\n    // extract params & att operation to matrix\n    params = item.split(PARAMS_SPLIT_RE).map(function (i) {\n      return +i || 0;\n    });\n\n    // If params count is not correct - ignore command\n    switch (cmd) {\n      case 'matrix':\n        if (params.length === 6) {\n          matrix.matrix(params);\n        }\n        return;\n\n      case 'scale':\n        if (params.length === 1) {\n          matrix.scale(params[0], params[0]);\n        } else if (params.length === 2) {\n          matrix.scale(params[0], params[1]);\n        }\n        return;\n\n      case 'rotate':\n        if (params.length === 1) {\n          matrix.rotate(params[0], 0, 0);\n        } else if (params.length === 3) {\n          matrix.rotate(params[0], params[1], params[2]);\n        }\n        return;\n\n      case 'translate':\n        if (params.length === 1) {\n          matrix.translate(params[0], 0);\n        } else if (params.length === 2) {\n          matrix.translate(params[0], params[1]);\n        }\n        return;\n\n      case 'skewX':\n        if (params.length === 1) {\n          matrix.skewX(params[0]);\n        }\n        return;\n\n      case 'skewY':\n        if (params.length === 1) {\n          matrix.skewY(params[0]);\n        }\n        return;\n    }\n  });\n\n  return matrix;\n};\n","// Convert an arc to a sequence of cubic bÃ©zier curves\n//\n'use strict';\n\n\nvar TAU = Math.PI * 2;\n\n\n/* eslint-disable space-infix-ops */\n\n// Calculate an angle between two vectors\n//\nfunction vector_angle(ux, uy, vx, vy) {\n  var sign = (ux * vy - uy * vx < 0) ? -1 : 1;\n  var umag = Math.sqrt(ux * ux + uy * uy);\n  var vmag = Math.sqrt(ux * ux + uy * uy);\n  var dot  = ux * vx + uy * vy;\n  var div  = dot / (umag * vmag);\n\n  // rounding errors, e.g. -1.0000000000000002 can screw up this\n  if (div >  1.0) { div =  1.0; }\n  if (div < -1.0) { div = -1.0; }\n\n  return sign * Math.acos(div);\n}\n\n\n// Convert from endpoint to center parameterization,\n// see http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n//\n// Return [cx, cy, Î¸1, Î”Î¸]\n//\nfunction get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_Ï†, cos_Ï†) {\n  // Step 1.\n  //\n  // Moving an ellipse so origin will be the middlepoint between our two\n  // points. After that, rotate it to line up ellipse axes with coordinate\n  // axes.\n  //\n  var x1p =  cos_Ï†*(x1-x2)/2 + sin_Ï†*(y1-y2)/2;\n  var y1p = -sin_Ï†*(x1-x2)/2 + cos_Ï†*(y1-y2)/2;\n\n  var rx_sq  =  rx * rx;\n  var ry_sq  =  ry * ry;\n  var x1p_sq = x1p * x1p;\n  var y1p_sq = y1p * y1p;\n\n  // Step 2.\n  //\n  // Compute coordinates of the centre of this ellipse (cx', cy')\n  // in the new coordinate system.\n  //\n  var radicant = (rx_sq * ry_sq) - (rx_sq * y1p_sq) - (ry_sq * x1p_sq);\n\n  if (radicant < 0) {\n    // due to rounding errors it might be e.g. -1.3877787807814457e-17\n    radicant = 0;\n  }\n\n  radicant /=   (rx_sq * y1p_sq) + (ry_sq * x1p_sq);\n  radicant = Math.sqrt(radicant) * (fa === fs ? -1 : 1);\n\n  var cxp = radicant *  rx/ry * y1p;\n  var cyp = radicant * -ry/rx * x1p;\n\n  // Step 3.\n  //\n  // Transform back to get centre coordinates (cx, cy) in the original\n  // coordinate system.\n  //\n  var cx = cos_Ï†*cxp - sin_Ï†*cyp + (x1+x2)/2;\n  var cy = sin_Ï†*cxp + cos_Ï†*cyp + (y1+y2)/2;\n\n  // Step 4.\n  //\n  // Compute angles (Î¸1, Î”Î¸).\n  //\n  var v1x =  (x1p - cxp) / rx;\n  var v1y =  (y1p - cyp) / ry;\n  var v2x = (-x1p - cxp) / rx;\n  var v2y = (-y1p - cyp) / ry;\n\n  var Î¸1 = vector_angle(1, 0, v1x, v1y);\n  var Î”Î¸ = vector_angle(v1x, v1y, v2x, v2y);\n\n  if (fs === 0 && Î”Î¸ > 0) {\n    Î”Î¸ -= TAU;\n  }\n  if (fs === 1 && Î”Î¸ < 0) {\n    Î”Î¸ += TAU;\n  }\n\n  return [ cx, cy, Î¸1, Î”Î¸ ];\n}\n\n//\n// Approximate one unit arc segment with bÃ©zier curves,\n// see http://math.stackexchange.com/questions/873224\n//\nfunction approximate_unit_arc(Î¸1, Î”Î¸) {\n  var Î± = 4/3 * Math.tan(Î”Î¸/4);\n\n  var x1 = Math.cos(Î¸1);\n  var y1 = Math.sin(Î¸1);\n  var x2 = Math.cos(Î¸1 + Î”Î¸);\n  var y2 = Math.sin(Î¸1 + Î”Î¸);\n\n  return [ x1, y1, x1 - y1*Î±, y1 + x1*Î±, x2 + y2*Î±, y2 - x2*Î±, x2, y2 ];\n}\n\nmodule.exports = function a2c(x1, y1, x2, y2, fa, fs, rx, ry, Ï†) {\n  var sin_Ï† = Math.sin(Ï† * TAU / 360);\n  var cos_Ï† = Math.cos(Ï† * TAU / 360);\n\n  // Make sure radii are valid\n  //\n  var x1p =  cos_Ï†*(x1-x2)/2 + sin_Ï†*(y1-y2)/2;\n  var y1p = -sin_Ï†*(x1-x2)/2 + cos_Ï†*(y1-y2)/2;\n\n  if (x1p === 0 && y1p === 0) {\n    // we're asked to draw line to itself\n    return [];\n  }\n\n  if (rx === 0 || ry === 0) {\n    // one of the radii is zero\n    return [];\n  }\n\n\n  // Compensate out-of-range radii\n  //\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var Î› = (x1p * x1p) / (rx * rx) + (y1p * y1p) / (ry * ry);\n  if (Î› > 1) {\n    rx *= Math.sqrt(Î›);\n    ry *= Math.sqrt(Î›);\n  }\n\n\n  // Get center parameters (cx, cy, Î¸1, Î”Î¸)\n  //\n  var cc = get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_Ï†, cos_Ï†);\n\n  var result = [];\n  var Î¸1 = cc[2];\n  var Î”Î¸ = cc[3];\n\n  // Split an arc to multiple segments, so each segment\n  // will be less than Ï„/4 (= 90Â°)\n  //\n  var segments = Math.max(Math.ceil(Math.abs(Î”Î¸) / (TAU / 4)), 1);\n  Î”Î¸ /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    result.push(approximate_unit_arc(Î¸1, Î”Î¸));\n    Î¸1 += Î”Î¸;\n  }\n\n  // We have a bezier approximation of a unit circle,\n  // now need to transform back to the original ellipse\n  //\n  return result.map(function (curve) {\n    for (var i = 0; i < curve.length; i += 2) {\n      var x = curve[i + 0];\n      var y = curve[i + 1];\n\n      // scale\n      x *= rx;\n      y *= ry;\n\n      // rotate\n      var xp = cos_Ï†*x - sin_Ï†*y;\n      var yp = sin_Ï†*x + cos_Ï†*y;\n\n      // translate\n      curve[i + 0] = xp + cc[0];\n      curve[i + 1] = yp + cc[1];\n    }\n\n    return curve;\n  });\n};\n","'use strict';\n\n/* eslint-disable space-infix-ops */\n\n// The precision used to consider an ellipse as a circle\n//\nvar epsilon = 0.0000000001;\n\n// To convert degree in radians\n//\nvar torad = Math.PI / 180;\n\n// Class constructor :\n//  an ellipse centred at 0 with radii rx,ry and x - axis - angle ax.\n//\nfunction Ellipse(rx, ry, ax) {\n  if (!(this instanceof Ellipse)) { return new Ellipse(rx, ry, ax); }\n  this.rx = rx;\n  this.ry = ry;\n  this.ax = ax;\n}\n\n// Apply a linear transform m to the ellipse\n// m is an array representing a matrix :\n//    -         -\n//   | m[0] m[2] |\n//   | m[1] m[3] |\n//    -         -\n//\nEllipse.prototype.transform = function (m) {\n  // We consider the current ellipse as image of the unit circle\n  // by first scale(rx,ry) and then rotate(ax) ...\n  // So we apply ma =  m x rotate(ax) x scale(rx,ry) to the unit circle.\n  var c = Math.cos(this.ax * torad), s = Math.sin(this.ax * torad);\n  var ma = [ this.rx * (m[0]*c + m[2]*s),\n             this.rx * (m[1]*c + m[3]*s),\n             this.ry * (-m[0]*s + m[2]*c),\n             this.ry * (-m[1]*s + m[3]*c) ];\n\n  // ma * transpose(ma) = [ J L ]\n  //                      [ L K ]\n  // L is calculated later (if the image is not a circle)\n  var J = ma[0]*ma[0] + ma[2]*ma[2],\n      K = ma[1]*ma[1] + ma[3]*ma[3];\n\n  // the discriminant of the characteristic polynomial of ma * transpose(ma)\n  var D = ((ma[0]-ma[3])*(ma[0]-ma[3]) + (ma[2]+ma[1])*(ma[2]+ma[1])) *\n          ((ma[0]+ma[3])*(ma[0]+ma[3]) + (ma[2]-ma[1])*(ma[2]-ma[1]));\n\n  // the \"mean eigenvalue\"\n  var JK = (J + K) / 2;\n\n  // check if the image is (almost) a circle\n  if (D < epsilon * JK) {\n    // if it is\n    this.rx = this.ry = Math.sqrt(JK);\n    this.ax = 0;\n    return this;\n  }\n\n  // if it is not a circle\n  var L = ma[0]*ma[1] + ma[2]*ma[3];\n\n  D = Math.sqrt(D);\n\n  // {l1,l2} = the two eigen values of ma * transpose(ma)\n  var l1 = JK + D/2,\n      l2 = JK - D/2;\n  // the x - axis - rotation angle is the argument of the l1 - eigenvector\n  this.ax = (Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon) ?\n    90\n  :\n    Math.atan(Math.abs(L) > Math.abs(l1 - K) ?\n      (l1 - J) / L\n    :\n      L / (l1 - K)\n    ) * 180 / Math.PI;\n\n  // if ax > 0 => rx = sqrt(l1), ry = sqrt(l2), else exchange axes and ax += 90\n  if (this.ax >= 0) {\n    // if ax in [0,90]\n    this.rx = Math.sqrt(l1);\n    this.ry = Math.sqrt(l2);\n  } else {\n    // if ax in ]-90,0[ => exchange axes\n    this.ax += 90;\n    this.rx = Math.sqrt(l2);\n    this.ry = Math.sqrt(l1);\n  }\n\n  return this;\n};\n\n// Check if the ellipse is (almost) degenerate, i.e. rx = 0 or ry = 0\n//\nEllipse.prototype.isDegenerate = function () {\n  return (this.rx < epsilon * this.ry || this.ry < epsilon * this.rx);\n};\n\nmodule.exports = Ellipse;\n","// SVG Path transformations library\n//\n// Usage:\n//\n//    SvgPath('...')\n//      .translate(-150, -100)\n//      .scale(0.5)\n//      .translate(-150, -100)\n//      .toFixed(1)\n//      .toString()\n//\n\n'use strict';\n\n\nvar pathParse      = require('./path_parse');\nvar transformParse = require('./transform_parse');\nvar matrix         = require('./matrix');\nvar a2c            = require('./a2c');\nvar ellipse        = require('./ellipse');\n\n\n// Class constructor\n//\nfunction SvgPath(path) {\n  if (!(this instanceof SvgPath)) { return new SvgPath(path); }\n\n  var pstate = pathParse(path);\n\n  // Array of path segments.\n  // Each segment is array [command, param1, param2, ...]\n  this.segments = pstate.segments;\n\n  // Error message on parse error.\n  this.err      = pstate.err;\n\n  // Transforms stack for lazy evaluation\n  this.__stack    = [];\n}\n\n\nSvgPath.prototype.__matrix = function (m) {\n  var self = this,\n      ma, sx, sy, angle, arc2line, i;\n\n  // Quick leave for empty matrix\n  if (!m.queue.length) { return; }\n\n  this.iterate(function (s, index, x, y) {\n    var p, result, name, isRelative;\n\n    switch (s[0]) {\n\n      // Process 'assymetric' commands separately\n      case 'v':\n        p      = m.calc(0, s[1], true);\n        result = (p[0] === 0) ? [ 'v', p[1] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'V':\n        p      = m.calc(x, s[1], false);\n        result = (p[0] === m.calc(x, y, false)[0]) ? [ 'V', p[1] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'h':\n        p      = m.calc(s[1], 0, true);\n        result = (p[1] === 0) ? [ 'h', p[0] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'H':\n        p      = m.calc(s[1], y, false);\n        result = (p[1] === m.calc(x, y, false)[1]) ? [ 'H', p[0] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'a':\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n\n        // Drop segment if arc is empty (end point === start point)\n        /*if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          return [];\n        }*/\n\n        // Transform rx, ry and the x-axis-rotation\n        var ma = m.toArray();\n        var e = ellipse(s[1], s[2], s[3]).transform(ma);\n\n        // flip sweep-flag if matrix is not orientation-preserving\n        if (ma[0] * ma[3] - ma[1] * ma[2] < 0) {\n          s[5] = s[5] ? '0' : '1';\n        }\n\n        // Transform end point as usual (without translation for relative notation)\n        p = m.calc(s[6], s[7], s[0] === 'a');\n\n        // Empty arcs can be ignored by renderer, but should not be dropped\n        // to avoid collisions with `S A S` and so on. Replace with empty line.\n        if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n          break;\n        }\n\n        // if the resulting ellipse is (almost) a segment ...\n        if (e.isDegenerate()) {\n          // replace the arc by a line\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n        } else {\n          // if it is a real ellipse\n          // s[0], s[4] and s[5] are not modified\n          result = [ s[0], e.rx, e.ry, e.ax, s[4], s[5], p[0], p[1] ];\n        }\n\n        break;\n\n      case 'm':\n        // Edge case. The very first `m` should be processed as absolute, if happens.\n        // Make sense for coord shift transforms.\n        isRelative = index > 0;\n\n        p = m.calc(s[1], s[2], isRelative);\n        result = [ 'm', p[0], p[1] ];\n        break;\n\n      default:\n        name       = s[0];\n        result     = [ name ];\n        isRelative = (name.toLowerCase() === name);\n\n        // Apply transformations to the segment\n        for (i = 1; i < s.length; i += 2) {\n          p = m.calc(s[i], s[i + 1], isRelative);\n          result.push(p[0], p[1]);\n        }\n    }\n\n    self.segments[index] = result;\n  }, true);\n};\n\n\n// Apply stacked commands\n//\nSvgPath.prototype.__evaluateStack = function () {\n  var m, i;\n\n  if (!this.__stack.length) { return; }\n\n  if (this.__stack.length === 1) {\n    this.__matrix(this.__stack[0]);\n    this.__stack = [];\n    return;\n  }\n\n  m = matrix();\n  i = this.__stack.length;\n\n  while (--i >= 0) {\n    m.matrix(this.__stack[i].toArray());\n  }\n\n  this.__matrix(m);\n  this.__stack = [];\n};\n\n\n// Convert processed SVG Path back to string\n//\nSvgPath.prototype.toString = function () {\n  var elements = [], skipCmd, cmd;\n\n  this.__evaluateStack();\n\n  for (var i = 0; i < this.segments.length; i++) {\n    // remove repeating commands names\n    cmd = this.segments[i][0];\n    skipCmd = i > 0 && cmd !== 'm' && cmd !== 'M' && cmd === this.segments[i - 1][0];\n    elements = elements.concat(skipCmd ? this.segments[i].slice(1) : this.segments[i]);\n  }\n\n  return elements.join(' ')\n            // Optimizations: remove spaces around commands & before `-`\n            //\n            // We could also remove leading zeros for `0.5`-like values,\n            // but their count is too small to spend time for.\n            .replace(/ ?([achlmqrstvz]) ?/gi, '$1')\n            .replace(/ \\-/g, '-')\n            // workaround for FontForge SVG importing bug\n            .replace(/zm/g, 'z m');\n};\n\n\n// Translate path to (x [, y])\n//\nSvgPath.prototype.translate = function (x, y) {\n  this.__stack.push(matrix().translate(x, y || 0));\n  return this;\n};\n\n\n// Scale path to (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.scale = function (sx, sy) {\n  this.__stack.push(matrix().scale(sx, (!sy && (sy !== 0)) ? sx : sy));\n  return this;\n};\n\n\n// Rotate path around point (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.rotate = function (angle, rx, ry) {\n  this.__stack.push(matrix().rotate(angle, rx || 0, ry || 0));\n  return this;\n};\n\n\n// Apply matrix transform (array of 6 elements)\n//\nSvgPath.prototype.matrix = function (m) {\n  this.__stack.push(matrix().matrix(m));\n  return this;\n};\n\n\n// Transform path according to \"transform\" attr of SVG spec\n//\nSvgPath.prototype.transform = function (transformString) {\n  if (!transformString.trim()) {\n    return this;\n  }\n  this.__stack.push(transformParse(transformString));\n  return this;\n};\n\n\n// Round coords with given decimal precition.\n// 0 by default (to integers)\n//\nSvgPath.prototype.round = function (d) {\n  var contourStartDeltaX = 0, contourStartDeltaY = 0, deltaX = 0, deltaY = 0, l;\n\n  d = d || 0;\n\n  this.__evaluateStack();\n\n  this.segments.forEach(function (s) {\n    var isRelative = (s[0].toLowerCase() === s[0]), t;\n\n    switch (s[0]) {\n      case 'H':\n      case 'h':\n        if (isRelative) { s[1] += deltaX; }\n        deltaX = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'V':\n      case 'v':\n        if (isRelative) { s[1] += deltaY; }\n        deltaY = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'Z':\n      case 'z':\n        deltaX = contourStartDeltaX;\n        deltaY = contourStartDeltaY;\n        return;\n\n      case 'M':\n      case 'm':\n        if (isRelative) {\n          s[1] += deltaX;\n          s[2] += deltaY;\n        }\n\n        deltaX = s[1] - s[1].toFixed(d);\n        deltaY = s[2] - s[2].toFixed(d);\n\n        contourStartDeltaX = deltaX;\n        contourStartDeltaY = deltaY;\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        return;\n\n      case 'A':\n      case 'a':\n        // [cmd, rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        if (isRelative) {\n          s[6] += deltaX;\n          s[7] += deltaY;\n        }\n\n        deltaX = s[6] - s[6].toFixed(d);\n        deltaY = s[7] - s[7].toFixed(d);\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        s[3] = +s[3].toFixed(d + 2); // better precision for rotation\n        s[6] = +s[6].toFixed(d);\n        s[7] = +s[7].toFixed(d);\n        return;\n\n      default:\n        // a c l q s t\n        l = s.length;\n\n        if (isRelative) {\n          s[l - 2] += deltaX;\n          s[l - 1] += deltaY;\n        }\n\n        deltaX = s[l - 2] - s[l - 2].toFixed(d);\n        deltaY = s[l - 1] - s[l - 1].toFixed(d);\n\n        s.forEach(function (val, i) {\n          if (!i) { return; }\n          s[i] = +s[i].toFixed(d);\n        });\n        return;\n    }\n  });\n\n  return this;\n};\n\n\n// Apply iterator function to all segments. If function returns result,\n// current segment will be replaced to array of returned segments.\n// If empty array is returned, current regment will be deleted.\n//\nSvgPath.prototype.iterate = function (iterator, keepLazyStack) {\n  var segments = this.segments,\n      replacements = {},\n      needReplace = false,\n      lastX = 0,\n      lastY = 0,\n      countourStartX = 0,\n      countourStartY = 0;\n  var i, j, isRelative, newSegments;\n\n  if (!keepLazyStack) {\n    this.__evaluateStack();\n  }\n\n  segments.forEach(function (s, index) {\n\n    var res = iterator(s, index, lastX, lastY);\n\n    if (Array.isArray(res)) {\n      replacements[index] = res;\n      needReplace = true;\n    }\n\n    var isRelative = (s[0] === s[0].toLowerCase());\n\n    // calculate absolute X and Y\n    switch (s[0]) {\n      case 'm':\n      case 'M':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        lastY = s[2] + (isRelative ? lastY : 0);\n        countourStartX = lastX;\n        countourStartY = lastY;\n        return;\n\n      case 'h':\n      case 'H':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        return;\n\n      case 'v':\n      case 'V':\n        lastY = s[1] + (isRelative ? lastY : 0);\n        return;\n\n      case 'z':\n      case 'Z':\n        // That make sence for multiple contours\n        lastX = countourStartX;\n        lastY = countourStartY;\n        return;\n\n      default:\n        lastX = s[s.length - 2] + (isRelative ? lastX : 0);\n        lastY = s[s.length - 1] + (isRelative ? lastY : 0);\n    }\n  });\n\n  // Replace segments if iterator return results\n\n  if (!needReplace) { return this; }\n\n  newSegments = [];\n\n  for (i = 0; i < segments.length; i++) {\n    if (typeof replacements[i] !== 'undefined') {\n      for (j = 0; j < replacements[i].length; j++) {\n        newSegments.push(replacements[i][j]);\n      }\n    } else {\n      newSegments.push(segments[i]);\n    }\n  }\n\n  this.segments = newSegments;\n\n  return this;\n};\n\n\n// Converts segments from relative to absolute\n//\nSvgPath.prototype.abs = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameUC = name.toUpperCase(),\n        i;\n\n    // Skip absolute commands\n    if (name === nameUC) { return; }\n\n    s[0] = nameUC;\n\n    switch (name) {\n      case 'v':\n        // v has shifted coords parity\n        s[1] += y;\n        return;\n\n      case 'a':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] += x;\n        s[7] += y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] += i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts segments from absolute to relative\n//\nSvgPath.prototype.rel = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameLC = name.toLowerCase(),\n        i;\n\n    // Skip relative commands\n    if (name === nameLC) { return; }\n\n    // Don't touch the first M to avoid potential confusions.\n    if (index === 0 && name === 'M') { return; }\n\n    s[0] = nameLC;\n\n    switch (name) {\n      case 'V':\n        // V has shifted coords parity\n        s[1] -= y;\n        return;\n\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] -= x;\n        s[7] -= y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] -= i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts arcs to cubic bÃ©zier curves\n//\nSvgPath.prototype.unarc = function () {\n  this.iterate(function (s, index, x, y) {\n    var i, new_segments, nextX, nextY, result = [], name = s[0];\n\n    // Skip anything except arcs\n    if (name !== 'A' && name !== 'a') { return null; }\n\n    if (name === 'a') {\n      // convert relative arc coordinates to absolute\n      nextX = x + s[6];\n      nextY = y + s[7];\n    } else {\n      nextX = s[6];\n      nextY = s[7];\n    }\n\n    new_segments = a2c(x, y, nextX, nextY, s[4], s[5], s[1], s[2], s[3]);\n\n    // Degenerated arcs can be ignored by renderer, but should not be dropped\n    // to avoid collisions with `S A S` and so on. Replace with empty line.\n    if (new_segments.length === 0) {\n      return [ [ s[0] === 'a' ? 'l' : 'L', s[6], s[7] ] ];\n    }\n\n    new_segments.forEach(function (s) {\n      result.push([ 'C', s[2], s[3], s[4], s[5], s[6], s[7] ]);\n    });\n\n    return result;\n  });\n\n  return this;\n};\n\n\n// Converts smooth curves (with missed control point) to generic curves\n//\nSvgPath.prototype.unshort = function () {\n  var segments = this.segments;\n  var prevControlX, prevControlY, prevSegment;\n  var curControlX, curControlY;\n\n  // TODO: add lazy evaluation flag when relative commands supported\n\n  this.iterate(function (s, idx, x, y) {\n    var name = s[0], nameUC = name.toUpperCase(), isRelative;\n\n    // First command MUST be M|m, it's safe to skip.\n    // Protect from access to [-1] for sure.\n    if (!idx) { return; }\n\n    if (nameUC === 'T') { // quadratic curve\n      isRelative = (name === 't');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'Q') {\n        prevControlX = prevSegment[1] - x;\n        prevControlY = prevSegment[2] - y;\n      } else if (prevSegment[0] === 'q') {\n        prevControlX = prevSegment[1] - prevSegment[3];\n        prevControlY = prevSegment[2] - prevSegment[4];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'q' : 'Q',\n        curControlX, curControlY,\n        s[1], s[2]\n      ];\n\n    } else if (nameUC === 'S') { // cubic curve\n      isRelative = (name === 's');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'C') {\n        prevControlX = prevSegment[3] - x;\n        prevControlY = prevSegment[4] - y;\n      } else if (prevSegment[0] === 'c') {\n        prevControlX = prevSegment[3] - prevSegment[5];\n        prevControlY = prevSegment[4] - prevSegment[6];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'c' : 'C',\n        curControlX, curControlY,\n        s[1], s[2], s[3], s[4]\n      ];\n    }\n  });\n\n  return this;\n};\n\n\nmodule.exports = SvgPath;\n","'use strict';\n\nmodule.exports = require('./lib/svgpath');\n","import svgpath from 'svgpath';\n\nexport default function applyTransforms ( node, transforms ) {\n\tif ( node.attributes.transform ) {\n\t\ttransforms = transforms.concat( node.attributes.transform );\n\t\tdelete node.attributes.transform;\n\t}\n\n\tconst transformString = transforms.join( ' ' );\n\n\tif ( node.name === 'path' ) {\n\t\tnode.attributes.d = svgpath( node.attributes.d )\n\t\t\t.transform( transformString )\n\t\t\t.round( 10 )\n\t\t\t.toString();\n\t} else if ( transformString ) {\n\t\tnode.attributes.transform = transformString;\n\t}\n}\n","import convertToPath from './convertToPath.js';\nimport applyAttributes from './applyAttributes.js';\nimport applyClasses from './applyClasses.js';\nimport applyTransforms from './applyTransforms.js';\nimport { assign, cloneExcept } from './utils/object.js';\n\nconst ignore = [ 'defs', 'title' ];\nconst noninheritable = [ 'id', 'class', 'style', 'transform' ];\n\nexport default function walk ( node, paths, transforms, classes, attributes ) {\n\tif ( node.name === 'svg' ) {\n\t\tconst _transforms = transforms.slice();\n\t\tnode.children.forEach( child => {\n\t\t\twalk( child, paths, _transforms, assign( {}, classes ), assign( {}, attributes ) );\n\t\t});\n\t}\n\n\telse if ( node.name === 'g' ) {\n\t\ttransforms = node.attributes.transform ? transforms.concat( node.attributes.transform ) : transforms;\n\n\t\tif ( node.attributes.class ) {\n\t\t\tnode.attributes.class.split( ' ' )\n\t\t\t\t.filter( Boolean )\n\t\t\t\t.forEach( className => classes[ className ] = true );\n\t\t}\n\n\t\tnode.children.forEach( child => {\n\t\t\tconst _classes = assign( {}, classes );\n\n\t\t\tconst _attributes = assign(\n\t\t\t\tcloneExcept( attributes, noninheritable ),\n\t\t\t\tcloneExcept( node.attributes, noninheritable )\n\t\t\t);\n\n\t\t\twalk( child, paths, transforms, _classes, _attributes );\n\t\t});\n\t}\n\n\telse if ( ~ignore.indexOf( node.name ) ) {\n\t\tapplyAttributes( node, attributes );\n\t\tapplyClasses( node, classes );\n\t\tapplyTransforms( node, transforms );\n\t\tpaths.push( node );\n\t}\n\n\telse {\n\t\tapplyAttributes( node, attributes );\n\t\tapplyClasses( node, classes );\n\n\t\tif ( node.name !== 'path' ) {\n\t\t\tnode = convertToPath( node );\n\t\t}\n\n\t\tapplyTransforms( node, transforms );\n\t\tpaths.push( node );\n\t}\n}\n","function stringifyAttributes ( attributes ) {\n\treturn Object.keys( attributes ).map( key => ` ${key}=\"${attributes[key]}\"` ).join( '' );\n}\n\nexport default function stringify ( node, indent ) {\n\tif ( typeof node === 'string' ) return node;\n\n\tconst attributes = stringifyAttributes( node.attributes );\n\n\tlet str = `${indent}<${node.name}${attributes}`;\n\n\tif ( node.children && node.children.length ) {\n\t\tstr += '>';\n\t\tlet prefix = '\\n';\n\n\t\tfor ( let child of node.children ) {\n\t\t\tif ( typeof child === 'string' ) {\n\t\t\t\tstr += child;\n\t\t\t\tprefix = '';\n\t\t\t} else {\n\t\t\t\tstr += prefix + stringify( child, indent + '\\t' );\n\t\t\t\tprefix = '\\n';\n\t\t\t}\n\t\t}\n\n\t\tif ( prefix ) prefix += indent;\n\n\t\tstr += `${prefix}</${node.name}>`;\n\t} else if ( node.val ) {\n\t\tstr += `>${node.val}</${node.name}>`;\n\t} else {\n\t\tstr += '/>';\n\t}\n\n\treturn str;\n}\n","import { parse as parseSvg } from 'svg-parser';\nimport walk from './walk.js';\nimport stringify from './stringify.js';\n\nclass Pathologist {\n\tconstructor ( source ) {\n\t\tthis.source = parseSvg( source );\n\n\t\tthis.target = {\n\t\t\tname: this.source.name,\n\t\t\tattributes: Object.assign( {}, this.source.attributes ),\n\t\t\tchildren: []\n\t\t};\n\n\t\twalk( this.source, this.target.children, [], {}, {} );\n\t}\n\n\ttoString () {\n\t\treturn stringify( this.target, '' );\n\t}\n}\n\nexport function transform ( source ) {\n\treturn new Pathologist( source ).toString();\n}\n\nexport function parse ( source ) {\n\tconst pathologist = new Pathologist( source );\n\n\treturn {\n\t\tpaths: pathologist.target.children.filter( node => node.name === 'path' ).map( node => node.attributes ),\n\t\ttoString () {\n\t\t\treturn pathologist.toString();\n\t\t}\n\t};\n}\n"],"names":["parse","const","let","this","commonjsHelpers.interopDefault","convertToPath","parseSvg"],"mappings":"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"}