{"version":3,"file":null,"sources":["../node_modules/svg-parser/dist/svg-parser.es.js","../src/utils/object.js","../src/convertToPath.js","../src/applyAttributes.js","../src/applyClasses.js","../node_modules/svgpath/lib/path_parse.js","../node_modules/svgpath/lib/matrix.js","../node_modules/svgpath/lib/transform_parse.js","../node_modules/svgpath/lib/a2c.js","../node_modules/svgpath/lib/ellipse.js","../node_modules/svgpath/lib/svgpath.js","../node_modules/svgpath/index.js","../src/applyTransforms.js","../src/walk.js","../src/stringify.js","../src/index.js"],"sourcesContent":["function getLocator ( source ) {\n\tvar originalLines = source.split( '\\n' );\n\n\tvar start = 0;\n\tvar lineRanges = originalLines.map( function ( line, i ) {\n\t\tvar end = start + line.length + 1;\n\t\tvar range = { start: start, end: end, line: i };\n\n\t\tstart = end;\n\t\treturn range;\n\t});\n\n\tvar i = 0;\n\n\tfunction rangeContains ( range, index ) {\n\t\treturn range.start <= index && index < range.end;\n\t}\n\n\tfunction getLocation ( range, index ) {\n\t\treturn { line: range.line, column: index - range.start, character: index };\n\t}\n\n\treturn function locate ( search, startIndex ) {\n\t\tif ( typeof search === 'string' ) {\n\t\t\tsearch = source.indexOf( search, startIndex || 0 );\n\t\t}\n\n\t\tvar range = lineRanges[i];\n\n\t\tvar d = search >= range.end ? 1 : -1;\n\n\t\twhile ( range ) {\n\t\t\tif ( rangeContains( range, search ) ) return getLocation( range, search );\n\n\t\t\ti += d;\n\t\t\trange = lineRanges[i];\n\t\t}\n\t};\n}\n\nfunction locate ( source, search, startIndex ) {\n\treturn getLocator( source )( search, startIndex );\n}\n\nvar validNameCharacters = /[a-zA-Z0-9:-]/;\nvar whitespace = /[\\s\\t\\r\\n]/;\nvar quotemark = /['\"]/;\n\nfunction repeat ( str, i ) {\n\tvar result = '';\n\twhile ( i-- ) result += str;\n\treturn result;\n}\n\nfunction parse ( source ) {\n\tvar match = /^<\\?.+?\\?>/.exec( source );\n\tvar metadata = match ? match[0] : '';\n\n\tvar stack = [];\n\n\tvar state = neutral;\n\tvar currentElement = null;\n\tvar root = null;\n\n\tfunction error ( message ) {\n\t\tvar ref = locate( source, i );\n\t\tvar line = ref.line;\n\t\tvar column = ref.column;\n\t\tvar before = source.slice( 0, i ).replace( /^\\t+/, function (match) { return repeat( '  ', match.length ); } );\n\t\tvar beforeLine = /(^|\\n).*$/.exec( before )[0];\n\t\tvar after = source.slice( i );\n\t\tvar afterLine = /.*(\\n|$)/.exec( after )[0];\n\n\t\tvar snippet = \"\" + beforeLine + afterLine + \"\\n\" + (repeat( ' ', beforeLine.length )) + \"^\";\n\n\t\tthrow new Error( (message + \" (\" + line + \":\" + column + \"). If this is valid SVG, it's probably a bug in svg-parser. Please raise an issue at https://gitlab.com/Rich-Harris/svg-parser/issues â€“ thanks!\\n\\n\" + snippet) );\n\t}\n\n\tfunction neutral () {\n\t\tvar text = '';\n\t\twhile ( i < source.length && source[i] !== '<' ) text += source[ i++ ];\n\n\t\tif ( /\\S/.test( text ) ) {\n\t\t\tcurrentElement.children.push( text );\n\t\t}\n\n\t\tif ( source[i] === '<' ) {\n\t\t\treturn tag;\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction tag () {\n\t\tif ( source[i] === '!' ) {\n\t\t\treturn comment;\n\t\t}\n\n\t\tif ( source[i] === '/' ) {\n\t\t\treturn closingTag;\n\t\t}\n\n\t\tvar name = getName();\n\n\t\tvar element = {\n\t\t\tname: name,\n\t\t\tattributes: {},\n\t\t\tchildren: []\n\t\t};\n\n\t\tif ( currentElement ) {\n\t\t\tcurrentElement.children.push( element );\n\t\t} else {\n\t\t\troot = element;\n\t\t}\n\n\t\tvar attribute;\n\t\twhile ( i < source.length && ( attribute = getAttribute() ) ) {\n\t\t\telement.attributes[ attribute.name ] = attribute.value;\n\t\t}\n\n\t\tvar selfClosing = false;\n\n\t\tif ( source[i] === '/' ) {\n\t\t\ti += 1;\n\t\t\tselfClosing = true;\n\t\t}\n\n\t\tif ( source[i] !== '>' ) {\n\t\t\terror( 'Expected >' );\n\t\t}\n\n\t\tif ( !selfClosing ) {\n\t\t\tcurrentElement = element;\n\t\t\tstack.push( element );\n\t\t}\n\n\t\treturn neutral;\n\t}\n\n\tfunction comment () {\n\t\tvar index = source.indexOf( '-->', i );\n\t\tif ( !~index ) error( 'expected -->' );\n\n\t\ti = index + 3;\n\t\treturn neutral;\n\t}\n\n\tfunction closingTag () {\n\t\tvar name = getName();\n\n\t\tif ( !name ) error( 'Expected tag name' );\n\n\t\tif ( name !== currentElement.name ) {\n\t\t\terror( (\"Expected closing tag </\" + name + \"> to match opening tag <\" + (currentElement.name) + \">\") );\n\t\t}\n\n\t\tif ( source[i] !== '>' ) {\n\t\t\terror( 'Expected >' );\n\t\t}\n\n\t\tstack.pop();\n\t\tcurrentElement = stack[ stack.length - 1 ];\n\n\t\treturn neutral;\n\t}\n\n\tfunction getName () {\n\t\tvar name = '';\n\t\twhile ( i < source.length && validNameCharacters.test( source[i] ) ) name += source[ i++ ];\n\n\t\treturn name;\n\t}\n\n\tfunction getAttribute () {\n\t\tif ( !whitespace.test( source[i] ) ) return null;\n\t\tallowSpaces();\n\n\t\tvar name = getName();\n\t\tif ( !name ) return null;\n\n\t\tvar value = true;\n\n\t\tallowSpaces();\n\t\tif ( source[i] === '=' ) {\n\t\t\ti += 1;\n\t\t\tallowSpaces();\n\n\t\t\tvalue = getAttributeValue();\n\t\t\tif ( !isNaN( value ) ) value = +value; // TODO whitelist numeric attributes?\n\t\t}\n\n\t\treturn { name: name, value: value };\n\t}\n\n\tfunction getAttributeValue () {\n\t\treturn quotemark.test( source[i] ) ?\n\t\t\tgetQuotedAttributeValue() :\n\t\t\tgetUnquotedAttributeValue();\n\t}\n\n\tfunction getUnquotedAttributeValue () {\n\t\tvar value = '';\n\t\tdo {\n\t\t\tvar char = source[i];\n\t\t\tif ( char === ' ' || char === '>' || char === '/' ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tvalue += char;\n\t\t\ti += 1;\n\t\t} while ( i < source.length );\n\n\t\treturn value;\n\t}\n\n\tfunction getQuotedAttributeValue () {\n\t\tvar quotemark = source[ i++ ];\n\n\t\tvar value = '';\n\t\tvar escaped = false;\n\n\t\twhile ( i < source.length ) {\n\t\t\tvar char = source[ i++ ];\n\t\t\tif ( char === quotemark && !escaped ) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tif ( char === '\\\\' && !escaped ) {\n\t\t\t\tescaped = true;\n\t\t\t}\n\n\t\t\tvalue += escaped ? (\"\\\\\" + char) : char;\n\t\t\tescaped = false;\n\t\t}\n\t}\n\n\tfunction allowSpaces () {\n\t\twhile ( i < source.length && whitespace.test( source[i] ) ) i += 1;\n\t}\n\n\tvar i = metadata.length;\n\twhile ( i < source.length ) {\n\t\tif ( !state ) error( 'Unexpected character' );\n\t\tstate = state();\n\t\ti += 1;\n\t}\n\n\tif ( state !== neutral ) {\n\t\terror( 'Unexpected end of input' );\n\t}\n\n\tif ( root.name === 'svg' ) root.metadata = metadata;\n\treturn root;\n}\n\nexport { parse };\n//# sourceMappingURL=svg-parser.es.js.map\n","const assign = Object.assign || function assign ( source, ...targets ) {\n\ttargets.forEach( target => {\n\t\tObject.keys( target ).forEach( key => {\n\t\t\tsource[ key ] = target[ key ];\n\t\t});\n\t});\n};\n\nfunction cloneExcept ( obj, props ) {\n\tlet clone = {};\n\tObject.keys( obj ).forEach( prop => {\n\t\tif ( !~props.indexOf( prop ) ) clone[ prop ] = obj[ prop ];\n\t});\n\treturn clone;\n}\n\nexport { assign, cloneExcept };\n","import { cloneExcept } from './utils/object.js';\n\nfunction line ( points ) {\n\tlet path = '';\n\tlet prefix = 'M';\n\n\tfor ( let i = 0; i < points.length; i += 2 ) {\n\t\tpath += `${prefix}${points[i]},${points[i+1]}`;\n\t\tprefix = ' ';\n\t}\n\n\treturn path;\n}\n\nconst converters = {\n\tellipse: attributes => {\n\t\tconst cx = attributes.cx || 0;\n\t\tconst cy = attributes.cy || 0;\n\t\tconst rx = attributes.rx || 0;\n\t\tconst ry = attributes.ry || 0;\n\n\t\tconst path = cloneExcept( attributes, [ 'cx', 'cy', 'rx', 'ry' ] );\n\t\tpath.d = `M${cx - rx},${cy}a${rx},${ry} 0 1,0 ${rx * 2},0a${rx},${ry} 0 1,0 ${rx * -2},0`;\n\n\t\treturn path;\n\t},\n\n\tcircle: attributes => {\n\t\tconst cx = attributes.cx || 0;\n\t\tconst cy = attributes.cy || 0;\n\t\tconst r = attributes.r || 0;\n\n\t\tconst path = cloneExcept( attributes, [ 'cx', 'cy', 'r' ] );\n\t\tpath.d = `M${cx - r},${cy}a${r},${r} 0 1,0 ${r * 2},0a${r},${r} 0 1,0 ${r * -2},0`;\n\n\t\treturn path;\n\t},\n\n\tpolygon: attributes => {\n\t\tconst path = converters.polyline( attributes );\n\t\tpath.d += 'Z';\n\n\t\treturn path;\n\t},\n\n\tpolyline: attributes => {\n\t\tconst path = cloneExcept( attributes, 'points' );\n\t\tpath.d = line( attributes.points.trim().split( /[\\s,]+/ ) );\n\n\t\treturn path;\n\t},\n\n\trect: attributes => {\n\t\tconst x = +attributes.x || 0;\n\t\tconst y = +attributes.y || 0;\n\t\tconst width = +attributes.width || 0;\n\t\tconst height = +attributes.height || 0;\n\t\t// const rx = +attributes.rx || 0; // TODO handle...\n\t\t// const ry = +attributes.ry || 0; // TODO handle...\n\n\t\tconst path = cloneExcept( attributes, [ 'x', 'y', 'width', 'height', 'rx', 'ry' ] );\n\n\t\t// TODO handle rx and ry\n\t\tpath.d = `m${x},${y} ${width},0 0,${height} ${-width},0Z`;\n\n\t\treturn path;\n\t},\n\n\tline: attributes => {\n\t\tconst path = cloneExcept( attributes, [ 'x1', 'y1', 'x2', 'y2' ]);\n\t\tpath.d = line([ attributes.x1 || 0, attributes.y1 || 0, attributes.x2 || 0, attributes.y2 || 0 ]);\n\n\t\treturn path;\n\t}\n\n\t// TODO others...\n};\n\nexport default function convert ( node ) {\n\tconst converter = converters[ node.name ];\n\tif ( converter ) {\n\t\tconst attributes = converter( node.attributes );\n\n\t\treturn {\n\t\t\tname: 'path',\n\t\t\tattributes\n\t\t};\n\t}\n\n\tthrow new Error( `TODO <${node.name}>` );\n}\n","import { assign } from './utils/object.js';\n\nexport default function applyAttributes ( node, attributes ) {\n\tnode.attributes = assign( attributes, node.attributes );\n}\n","import { assign } from './utils/object.js';\n\nexport default function applyClasses ( node, classes ) {\n\tif ( node.attributes.class ) {\n\t\tclasses = assign( {}, classes );\n\n\t\tnode.attributes.class.split( ' ' )\n\t\t\t.filter( Boolean )\n\t\t\t.forEach( className => classes[ className ] = true );\n\t}\n\n\tconst classList = Object.keys( classes ).join( ' ' );\n\n\tif ( classList ) {\n\t\tnode.attributes.class = classList;\n\t}\n}\n","'use strict';\n\n\nvar paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0 };\n\nvar SPECIAL_SPACES = [\n  0x1680, 0x180E, 0x2000, 0x2001, 0x2002, 0x2003, 0x2004, 0x2005, 0x2006,\n  0x2007, 0x2008, 0x2009, 0x200A, 0x202F, 0x205F, 0x3000, 0xFEFF\n];\n\nfunction isSpace(ch) {\n  return (ch === 0x0A) || (ch === 0x0D) || (ch === 0x2028) || (ch === 0x2029) || // Line terminators\n    // White spaces\n    (ch === 0x20) || (ch === 0x09) || (ch === 0x0B) || (ch === 0x0C) || (ch === 0xA0) ||\n    (ch >= 0x1680 && SPECIAL_SPACES.indexOf(ch) >= 0);\n}\n\nfunction isCommand(code) {\n  /*eslint-disable no-bitwise*/\n  switch (code | 0x20) {\n    case 0x6D/* m */:\n    case 0x7A/* z */:\n    case 0x6C/* l */:\n    case 0x68/* h */:\n    case 0x76/* v */:\n    case 0x63/* c */:\n    case 0x73/* s */:\n    case 0x71/* q */:\n    case 0x74/* t */:\n    case 0x61/* a */:\n    case 0x72/* r */:\n      return true;\n  }\n  return false;\n}\n\nfunction isDigit(code) {\n  return (code >= 48 && code <= 57);   // 0..9\n}\n\nfunction isDigitStart(code) {\n  return (code >= 48 && code <= 57) || /* 0..9 */\n          code === 0x2B || /* + */\n          code === 0x2D || /* - */\n          code === 0x2E;   /* . */\n}\n\n\nfunction State(path) {\n  this.index  = 0;\n  this.path   = path;\n  this.max    = path.length;\n  this.result = [];\n  this.param  = 0.0;\n  this.err    = '';\n  this.segmentStart = 0;\n  this.data   = [];\n}\n\nfunction skipSpaces(state) {\n  while (state.index < state.max && isSpace(state.path.charCodeAt(state.index))) {\n    state.index++;\n  }\n}\n\n\nfunction scanParam(state) {\n  var start = state.index,\n      index = start,\n      max = state.max,\n      zeroFirst = false,\n      hasCeiling = false,\n      hasDecimal = false,\n      hasDot = false,\n      ch;\n\n  if (index >= max) {\n    state.err = 'SvgPath: missed param (at pos ' + index + ')';\n    return;\n  }\n  ch = state.path.charCodeAt(index);\n\n  if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n    index++;\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  // This logic is shamelessly borrowed from Esprima\n  // https://github.com/ariya/esprimas\n  //\n  if (!isDigit(ch) && ch !== 0x2E/* . */) {\n    state.err = 'SvgPath: param should start with 0..9 or `.` (at pos ' + index + ')';\n    return;\n  }\n\n  if (ch !== 0x2E/* . */) {\n    zeroFirst = (ch === 0x30/* 0 */);\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n\n    if (zeroFirst && index < max) {\n      // decimal number starts with '0' such as '09' is illegal.\n      if (ch && isDigit(ch)) {\n        state.err = 'SvgPath: numbers started with `0` such as `09` are ilegal (at pos ' + start + ')';\n        return;\n      }\n    }\n\n    while (index < max && isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasCeiling = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x2E/* . */) {\n    hasDot = true;\n    index++;\n    while (isDigit(state.path.charCodeAt(index))) {\n      index++;\n      hasDecimal = true;\n    }\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n  }\n\n  if (ch === 0x65/* e */ || ch === 0x45/* E */) {\n    if (hasDot && !hasCeiling && !hasDecimal) {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n\n    index++;\n\n    ch = (index < max) ? state.path.charCodeAt(index) : 0;\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      index++;\n    }\n    if (index < max && isDigit(state.path.charCodeAt(index))) {\n      while (index < max && isDigit(state.path.charCodeAt(index))) {\n        index++;\n      }\n    } else {\n      state.err = 'SvgPath: invalid float exponent (at pos ' + index + ')';\n      return;\n    }\n  }\n\n  state.index = index;\n  state.param = parseFloat(state.path.slice(start, index)) + 0.0;\n}\n\n\nfunction finalizeSegment(state) {\n  var cmd, cmdLC;\n\n  // Process duplicated commands (without comand name)\n\n  // This logic is shamelessly borrowed from Raphael\n  // https://github.com/DmitryBaranovskiy/raphael/\n  //\n  cmd   = state.path[state.segmentStart];\n  cmdLC = cmd.toLowerCase();\n\n  var params = state.data;\n\n  if (cmdLC === 'm' && params.length > 2) {\n    state.result.push([ cmd, params[0], params[1] ]);\n    params = params.slice(2);\n    cmdLC = 'l';\n    cmd = (cmd === 'm') ? 'l' : 'L';\n  }\n\n  if (cmdLC === 'r') {\n    state.result.push([ cmd ].concat(params));\n  } else {\n\n    while (params.length >= paramCounts[cmdLC]) {\n      state.result.push([ cmd ].concat(params.splice(0, paramCounts[cmdLC])));\n      if (!paramCounts[cmdLC]) {\n        break;\n      }\n    }\n  }\n}\n\n\nfunction scanSegment(state) {\n  var max = state.max, cmdCode, comma_found,\n            need_params, i;\n\n  state.segmentStart = state.index;\n  cmdCode = state.path.charCodeAt(state.index);\n\n  if (!isCommand(cmdCode)) {\n    state.err = 'SvgPath: bad command ' + state.path[state.index] + ' (at pos ' + state.index + ')';\n    return;\n  }\n\n  need_params = paramCounts[state.path[state.index].toLowerCase()];\n\n  state.index++;\n  skipSpaces(state);\n\n  state.data = [];\n\n  if (!need_params) {\n    // Z\n    finalizeSegment(state);\n    return;\n  }\n\n  comma_found = false;\n\n  for (;;) {\n    for (i = need_params; i > 0; i--) {\n      scanParam(state);\n      if (state.err.length) {\n        return;\n      }\n      state.data.push(state.param);\n\n      skipSpaces(state);\n      comma_found = false;\n\n      if (state.index < max && state.path.charCodeAt(state.index) === 0x2C/* , */) {\n        state.index++;\n        skipSpaces(state);\n        comma_found = true;\n      }\n    }\n\n    // after ',' param is mandatory\n    if (comma_found) {\n      continue;\n    }\n\n    if (state.index >= state.max) {\n      break;\n    }\n\n    // Stop on next segment\n    if (!isDigitStart(state.path.charCodeAt(state.index))) {\n      break;\n    }\n  }\n\n  finalizeSegment(state);\n}\n\n\n/* Returns array of segments:\n *\n * [\n *   [ command, coord1, coord2, ... ]\n * ]\n */\nmodule.exports = function pathParse(svgPath) {\n  var state = new State(svgPath);\n  var max = state.max;\n\n  skipSpaces(state);\n\n  while (state.index < max && !state.err.length) {\n    scanSegment(state);\n  }\n\n  if (state.err.length) {\n    state.result = [];\n\n  } else if (state.result.length) {\n\n    if ('mM'.indexOf(state.result[0][0]) < 0) {\n      state.err = 'SvgPath: string should start with `M` or `m`';\n      state.result = [];\n    } else {\n      state.result[0][0] = 'M';\n    }\n  }\n\n  return {\n    err: state.err,\n    segments: state.result\n  };\n};\n","'use strict';\n\n// combine 2 matrixes\n// m1, m2 - [a, b, c, d, e, g]\n//\nfunction combine(m1, m2) {\n  return [\n    m1[0] * m2[0] + m1[2] * m2[1],\n    m1[1] * m2[0] + m1[3] * m2[1],\n    m1[0] * m2[2] + m1[2] * m2[3],\n    m1[1] * m2[2] + m1[3] * m2[3],\n    m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n    m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n}\n\n\nfunction Matrix() {\n  if (!(this instanceof Matrix)) { return new Matrix(); }\n  this.queue = [];   // list of matrixes to apply\n  this.cache = null; // combined matrix cache\n}\n\n\nMatrix.prototype.matrix = function (m) {\n  if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1 && m[4] === 0 && m[5] === 0) {\n    return this;\n  }\n  this.cache = null;\n  this.queue.push(m);\n  return this;\n};\n\n\nMatrix.prototype.translate = function (tx, ty) {\n  if (tx !== 0 || ty !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, 0, 1, tx, ty ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.scale = function (sx, sy) {\n  if (sx !== 1 || sy !== 1) {\n    this.cache = null;\n    this.queue.push([ sx, 0, 0, sy, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.rotate = function (angle, rx, ry) {\n  var rad, cos, sin;\n\n  if (angle !== 0) {\n    this.translate(rx, ry);\n\n    rad = angle * Math.PI / 180;\n    cos = Math.cos(rad);\n    sin = Math.sin(rad);\n\n    this.queue.push([ cos, sin, -sin, cos, 0, 0 ]);\n    this.cache = null;\n\n    this.translate(-rx, -ry);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewX = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, 0, Math.tan(angle * Math.PI / 180), 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\nMatrix.prototype.skewY = function (angle) {\n  if (angle !== 0) {\n    this.cache = null;\n    this.queue.push([ 1, Math.tan(angle * Math.PI / 180), 0, 1, 0, 0 ]);\n  }\n  return this;\n};\n\n\n// Flatten queue\n//\nMatrix.prototype.toArray = function () {\n  if (this.cache) {\n    return this.cache;\n  }\n\n  if (!this.queue.length) {\n    this.cache = [ 1, 0, 0, 1, 0, 0 ];\n    return this.cache;\n  }\n\n  this.cache = this.queue[0];\n\n  if (this.queue.length === 1) {\n    return this.cache;\n  }\n\n  for (var i = 1; i < this.queue.length; i++) {\n    this.cache = combine(this.cache, this.queue[i]);\n  }\n\n  return this.cache;\n};\n\n\n// Apply list of matrixes to (x,y) point.\n// If `isRelative` set, `translate` component of matrix will be skipped\n//\nMatrix.prototype.calc = function (x, y, isRelative) {\n  var m, i, len;\n\n  // Don't change point on empty transforms queue\n  if (!this.queue.length) { return [ x, y ]; }\n\n  // Calculate final matrix, if not exists\n  //\n  // NB. if you deside to apply transforms to point one-by-one,\n  // they should be taken in reverse order\n\n  if (!this.cache) {\n    this.cache = this.toArray();\n  }\n\n  m = this.cache;\n\n  // Apply matrix to point\n  return [\n    x * m[0] + y * m[2] + (isRelative ? 0 : m[4]),\n    x * m[1] + y * m[3] + (isRelative ? 0 : m[5])\n  ];\n};\n\n\nmodule.exports = Matrix;\n","'use strict';\n\n\nvar Matrix = require('./matrix');\n\nvar operations = {\n  matrix: true,\n  scale: true,\n  rotate: true,\n  translate: true,\n  skewX: true,\n  skewY: true\n};\n\nvar CMD_SPLIT_RE    = /\\s*(matrix|translate|scale|rotate|skewX|skewY)\\s*\\(\\s*(.+?)\\s*\\)[\\s,]*/;\nvar PARAMS_SPLIT_RE = /[\\s,]+/;\n\n\nmodule.exports = function transformParse(transformString) {\n  var matrix = new Matrix();\n  var cmd, params;\n\n  // Split value into ['', 'translate', '10 50', '', 'scale', '2', '', 'rotate',  '-45', '']\n  transformString.split(CMD_SPLIT_RE).forEach(function (item) {\n\n    // Skip empty elements\n    if (!item.length) { return; }\n\n    // remember operation\n    if (typeof operations[item] !== 'undefined') {\n      cmd = item;\n      return;\n    }\n\n    // extract params & att operation to matrix\n    params = item.split(PARAMS_SPLIT_RE).map(function (i) {\n      return +i || 0;\n    });\n\n    // If params count is not correct - ignore command\n    switch (cmd) {\n      case 'matrix':\n        if (params.length === 6) {\n          matrix.matrix(params);\n        }\n        return;\n\n      case 'scale':\n        if (params.length === 1) {\n          matrix.scale(params[0], params[0]);\n        } else if (params.length === 2) {\n          matrix.scale(params[0], params[1]);\n        }\n        return;\n\n      case 'rotate':\n        if (params.length === 1) {\n          matrix.rotate(params[0], 0, 0);\n        } else if (params.length === 3) {\n          matrix.rotate(params[0], params[1], params[2]);\n        }\n        return;\n\n      case 'translate':\n        if (params.length === 1) {\n          matrix.translate(params[0], 0);\n        } else if (params.length === 2) {\n          matrix.translate(params[0], params[1]);\n        }\n        return;\n\n      case 'skewX':\n        if (params.length === 1) {\n          matrix.skewX(params[0]);\n        }\n        return;\n\n      case 'skewY':\n        if (params.length === 1) {\n          matrix.skewY(params[0]);\n        }\n        return;\n    }\n  });\n\n  return matrix;\n};\n","// Convert an arc to a sequence of cubic bÃ©zier curves\n//\n'use strict';\n\n\nvar TAU = Math.PI * 2;\n\n\n/* eslint-disable space-infix-ops */\n\n// Calculate an angle between two vectors\n//\nfunction vector_angle(ux, uy, vx, vy) {\n  var sign = (ux * vy - uy * vx < 0) ? -1 : 1;\n  var umag = Math.sqrt(ux * ux + uy * uy);\n  var vmag = Math.sqrt(ux * ux + uy * uy);\n  var dot  = ux * vx + uy * vy;\n  var div  = dot / (umag * vmag);\n\n  // rounding errors, e.g. -1.0000000000000002 can screw up this\n  if (div >  1.0) { div =  1.0; }\n  if (div < -1.0) { div = -1.0; }\n\n  return sign * Math.acos(div);\n}\n\n\n// Convert from endpoint to center parameterization,\n// see http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n//\n// Return [cx, cy, Î¸1, Î”Î¸]\n//\nfunction get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_Ï†, cos_Ï†) {\n  // Step 1.\n  //\n  // Moving an ellipse so origin will be the middlepoint between our two\n  // points. After that, rotate it to line up ellipse axes with coordinate\n  // axes.\n  //\n  var x1p =  cos_Ï†*(x1-x2)/2 + sin_Ï†*(y1-y2)/2;\n  var y1p = -sin_Ï†*(x1-x2)/2 + cos_Ï†*(y1-y2)/2;\n\n  var rx_sq  =  rx * rx;\n  var ry_sq  =  ry * ry;\n  var x1p_sq = x1p * x1p;\n  var y1p_sq = y1p * y1p;\n\n  // Step 2.\n  //\n  // Compute coordinates of the centre of this ellipse (cx', cy')\n  // in the new coordinate system.\n  //\n  var radicant = (rx_sq * ry_sq) - (rx_sq * y1p_sq) - (ry_sq * x1p_sq);\n\n  if (radicant < 0) {\n    // due to rounding errors it might be e.g. -1.3877787807814457e-17\n    radicant = 0;\n  }\n\n  radicant /=   (rx_sq * y1p_sq) + (ry_sq * x1p_sq);\n  radicant = Math.sqrt(radicant) * (fa === fs ? -1 : 1);\n\n  var cxp = radicant *  rx/ry * y1p;\n  var cyp = radicant * -ry/rx * x1p;\n\n  // Step 3.\n  //\n  // Transform back to get centre coordinates (cx, cy) in the original\n  // coordinate system.\n  //\n  var cx = cos_Ï†*cxp - sin_Ï†*cyp + (x1+x2)/2;\n  var cy = sin_Ï†*cxp + cos_Ï†*cyp + (y1+y2)/2;\n\n  // Step 4.\n  //\n  // Compute angles (Î¸1, Î”Î¸).\n  //\n  var v1x =  (x1p - cxp) / rx;\n  var v1y =  (y1p - cyp) / ry;\n  var v2x = (-x1p - cxp) / rx;\n  var v2y = (-y1p - cyp) / ry;\n\n  var Î¸1 = vector_angle(1, 0, v1x, v1y);\n  var Î”Î¸ = vector_angle(v1x, v1y, v2x, v2y);\n\n  if (fs === 0 && Î”Î¸ > 0) {\n    Î”Î¸ -= TAU;\n  }\n  if (fs === 1 && Î”Î¸ < 0) {\n    Î”Î¸ += TAU;\n  }\n\n  return [ cx, cy, Î¸1, Î”Î¸ ];\n}\n\n//\n// Approximate one unit arc segment with bÃ©zier curves,\n// see http://math.stackexchange.com/questions/873224\n//\nfunction approximate_unit_arc(Î¸1, Î”Î¸) {\n  var Î± = 4/3 * Math.tan(Î”Î¸/4);\n\n  var x1 = Math.cos(Î¸1);\n  var y1 = Math.sin(Î¸1);\n  var x2 = Math.cos(Î¸1 + Î”Î¸);\n  var y2 = Math.sin(Î¸1 + Î”Î¸);\n\n  return [ x1, y1, x1 - y1*Î±, y1 + x1*Î±, x2 + y2*Î±, y2 - x2*Î±, x2, y2 ];\n}\n\nmodule.exports = function a2c(x1, y1, x2, y2, fa, fs, rx, ry, Ï†) {\n  var sin_Ï† = Math.sin(Ï† * TAU / 360);\n  var cos_Ï† = Math.cos(Ï† * TAU / 360);\n\n  // Make sure radii are valid\n  //\n  var x1p =  cos_Ï†*(x1-x2)/2 + sin_Ï†*(y1-y2)/2;\n  var y1p = -sin_Ï†*(x1-x2)/2 + cos_Ï†*(y1-y2)/2;\n\n  if (x1p === 0 && y1p === 0) {\n    // we're asked to draw line to itself\n    return [];\n  }\n\n  if (rx === 0 || ry === 0) {\n    // one of the radii is zero\n    return [];\n  }\n\n\n  // Compensate out-of-range radii\n  //\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n\n  var Î› = (x1p * x1p) / (rx * rx) + (y1p * y1p) / (ry * ry);\n  if (Î› > 1) {\n    rx *= Math.sqrt(Î›);\n    ry *= Math.sqrt(Î›);\n  }\n\n\n  // Get center parameters (cx, cy, Î¸1, Î”Î¸)\n  //\n  var cc = get_arc_center(x1, y1, x2, y2, fa, fs, rx, ry, sin_Ï†, cos_Ï†);\n\n  var result = [];\n  var Î¸1 = cc[2];\n  var Î”Î¸ = cc[3];\n\n  // Split an arc to multiple segments, so each segment\n  // will be less than Ï„/4 (= 90Â°)\n  //\n  var segments = Math.max(Math.ceil(Math.abs(Î”Î¸) / (TAU / 4)), 1);\n  Î”Î¸ /= segments;\n\n  for (var i = 0; i < segments; i++) {\n    result.push(approximate_unit_arc(Î¸1, Î”Î¸));\n    Î¸1 += Î”Î¸;\n  }\n\n  // We have a bezier approximation of a unit circle,\n  // now need to transform back to the original ellipse\n  //\n  return result.map(function (curve) {\n    for (var i = 0; i < curve.length; i += 2) {\n      var x = curve[i + 0];\n      var y = curve[i + 1];\n\n      // scale\n      x *= rx;\n      y *= ry;\n\n      // rotate\n      var xp = cos_Ï†*x - sin_Ï†*y;\n      var yp = sin_Ï†*x + cos_Ï†*y;\n\n      // translate\n      curve[i + 0] = xp + cc[0];\n      curve[i + 1] = yp + cc[1];\n    }\n\n    return curve;\n  });\n};\n","'use strict';\n\n/* eslint-disable space-infix-ops */\n\n// The precision used to consider an ellipse as a circle\n//\nvar epsilon = 0.0000000001;\n\n// To convert degree in radians\n//\nvar torad = Math.PI / 180;\n\n// Class constructor :\n//  an ellipse centred at 0 with radii rx,ry and x - axis - angle ax.\n//\nfunction Ellipse(rx, ry, ax) {\n  if (!(this instanceof Ellipse)) { return new Ellipse(rx, ry, ax); }\n  this.rx = rx;\n  this.ry = ry;\n  this.ax = ax;\n}\n\n// Apply a linear transform m to the ellipse\n// m is an array representing a matrix :\n//    -         -\n//   | m[0] m[2] |\n//   | m[1] m[3] |\n//    -         -\n//\nEllipse.prototype.transform = function (m) {\n  // We consider the current ellipse as image of the unit circle\n  // by first scale(rx,ry) and then rotate(ax) ...\n  // So we apply ma =  m x rotate(ax) x scale(rx,ry) to the unit circle.\n  var c = Math.cos(this.ax * torad), s = Math.sin(this.ax * torad);\n  var ma = [ this.rx * (m[0]*c + m[2]*s),\n             this.rx * (m[1]*c + m[3]*s),\n             this.ry * (-m[0]*s + m[2]*c),\n             this.ry * (-m[1]*s + m[3]*c) ];\n\n  // ma * transpose(ma) = [ J L ]\n  //                      [ L K ]\n  // L is calculated later (if the image is not a circle)\n  var J = ma[0]*ma[0] + ma[2]*ma[2],\n      K = ma[1]*ma[1] + ma[3]*ma[3];\n\n  // the discriminant of the characteristic polynomial of ma * transpose(ma)\n  var D = ((ma[0]-ma[3])*(ma[0]-ma[3]) + (ma[2]+ma[1])*(ma[2]+ma[1])) *\n          ((ma[0]+ma[3])*(ma[0]+ma[3]) + (ma[2]-ma[1])*(ma[2]-ma[1]));\n\n  // the \"mean eigenvalue\"\n  var JK = (J + K) / 2;\n\n  // check if the image is (almost) a circle\n  if (D < epsilon * JK) {\n    // if it is\n    this.rx = this.ry = Math.sqrt(JK);\n    this.ax = 0;\n    return this;\n  }\n\n  // if it is not a circle\n  var L = ma[0]*ma[1] + ma[2]*ma[3];\n\n  D = Math.sqrt(D);\n\n  // {l1,l2} = the two eigen values of ma * transpose(ma)\n  var l1 = JK + D/2,\n      l2 = JK - D/2;\n  // the x - axis - rotation angle is the argument of the l1 - eigenvector\n  this.ax = (Math.abs(L) < epsilon && Math.abs(l1 - K) < epsilon) ?\n    90\n  :\n    Math.atan(Math.abs(L) > Math.abs(l1 - K) ?\n      (l1 - J) / L\n    :\n      L / (l1 - K)\n    ) * 180 / Math.PI;\n\n  // if ax > 0 => rx = sqrt(l1), ry = sqrt(l2), else exchange axes and ax += 90\n  if (this.ax >= 0) {\n    // if ax in [0,90]\n    this.rx = Math.sqrt(l1);\n    this.ry = Math.sqrt(l2);\n  } else {\n    // if ax in ]-90,0[ => exchange axes\n    this.ax += 90;\n    this.rx = Math.sqrt(l2);\n    this.ry = Math.sqrt(l1);\n  }\n\n  return this;\n};\n\n// Check if the ellipse is (almost) degenerate, i.e. rx = 0 or ry = 0\n//\nEllipse.prototype.isDegenerate = function () {\n  return (this.rx < epsilon * this.ry || this.ry < epsilon * this.rx);\n};\n\nmodule.exports = Ellipse;\n","// SVG Path transformations library\n//\n// Usage:\n//\n//    SvgPath('...')\n//      .translate(-150, -100)\n//      .scale(0.5)\n//      .translate(-150, -100)\n//      .toFixed(1)\n//      .toString()\n//\n\n'use strict';\n\n\nvar pathParse      = require('./path_parse');\nvar transformParse = require('./transform_parse');\nvar matrix         = require('./matrix');\nvar a2c            = require('./a2c');\nvar ellipse        = require('./ellipse');\n\n\n// Class constructor\n//\nfunction SvgPath(path) {\n  if (!(this instanceof SvgPath)) { return new SvgPath(path); }\n\n  var pstate = pathParse(path);\n\n  // Array of path segments.\n  // Each segment is array [command, param1, param2, ...]\n  this.segments = pstate.segments;\n\n  // Error message on parse error.\n  this.err      = pstate.err;\n\n  // Transforms stack for lazy evaluation\n  this.__stack    = [];\n}\n\n\nSvgPath.prototype.__matrix = function (m) {\n  var self = this,\n      ma, sx, sy, angle, arc2line, i;\n\n  // Quick leave for empty matrix\n  if (!m.queue.length) { return; }\n\n  this.iterate(function (s, index, x, y) {\n    var p, result, name, isRelative;\n\n    switch (s[0]) {\n\n      // Process 'assymetric' commands separately\n      case 'v':\n        p      = m.calc(0, s[1], true);\n        result = (p[0] === 0) ? [ 'v', p[1] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'V':\n        p      = m.calc(x, s[1], false);\n        result = (p[0] === m.calc(x, y, false)[0]) ? [ 'V', p[1] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'h':\n        p      = m.calc(s[1], 0, true);\n        result = (p[1] === 0) ? [ 'h', p[0] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'H':\n        p      = m.calc(s[1], y, false);\n        result = (p[1] === m.calc(x, y, false)[1]) ? [ 'H', p[0] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'a':\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n\n        // Drop segment if arc is empty (end point === start point)\n        /*if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          return [];\n        }*/\n\n        // Transform rx, ry and the x-axis-rotation\n        var ma = m.toArray();\n        var e = ellipse(s[1], s[2], s[3]).transform(ma);\n\n        // flip sweep-flag if matrix is not orientation-preserving\n        if (ma[0] * ma[3] - ma[1] * ma[2] < 0) {\n          s[5] = s[5] ? '0' : '1';\n        }\n\n        // Transform end point as usual (without translation for relative notation)\n        p = m.calc(s[6], s[7], s[0] === 'a');\n\n        // Empty arcs can be ignored by renderer, but should not be dropped\n        // to avoid collisions with `S A S` and so on. Replace with empty line.\n        if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n          break;\n        }\n\n        // if the resulting ellipse is (almost) a segment ...\n        if (e.isDegenerate()) {\n          // replace the arc by a line\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n        } else {\n          // if it is a real ellipse\n          // s[0], s[4] and s[5] are not modified\n          result = [ s[0], e.rx, e.ry, e.ax, s[4], s[5], p[0], p[1] ];\n        }\n\n        break;\n\n      case 'm':\n        // Edge case. The very first `m` should be processed as absolute, if happens.\n        // Make sense for coord shift transforms.\n        isRelative = index > 0;\n\n        p = m.calc(s[1], s[2], isRelative);\n        result = [ 'm', p[0], p[1] ];\n        break;\n\n      default:\n        name       = s[0];\n        result     = [ name ];\n        isRelative = (name.toLowerCase() === name);\n\n        // Apply transformations to the segment\n        for (i = 1; i < s.length; i += 2) {\n          p = m.calc(s[i], s[i + 1], isRelative);\n          result.push(p[0], p[1]);\n        }\n    }\n\n    self.segments[index] = result;\n  }, true);\n};\n\n\n// Apply stacked commands\n//\nSvgPath.prototype.__evaluateStack = function () {\n  var m, i;\n\n  if (!this.__stack.length) { return; }\n\n  if (this.__stack.length === 1) {\n    this.__matrix(this.__stack[0]);\n    this.__stack = [];\n    return;\n  }\n\n  m = matrix();\n  i = this.__stack.length;\n\n  while (--i >= 0) {\n    m.matrix(this.__stack[i].toArray());\n  }\n\n  this.__matrix(m);\n  this.__stack = [];\n};\n\n\n// Convert processed SVG Path back to string\n//\nSvgPath.prototype.toString = function () {\n  var elements = [], skipCmd, cmd;\n\n  this.__evaluateStack();\n\n  for (var i = 0; i < this.segments.length; i++) {\n    // remove repeating commands names\n    cmd = this.segments[i][0];\n    skipCmd = i > 0 && cmd !== 'm' && cmd !== 'M' && cmd === this.segments[i - 1][0];\n    elements = elements.concat(skipCmd ? this.segments[i].slice(1) : this.segments[i]);\n  }\n\n  return elements.join(' ')\n            // Optimizations: remove spaces around commands & before `-`\n            //\n            // We could also remove leading zeros for `0.5`-like values,\n            // but their count is too small to spend time for.\n            .replace(/ ?([achlmqrstvz]) ?/gi, '$1')\n            .replace(/ \\-/g, '-')\n            // workaround for FontForge SVG importing bug\n            .replace(/zm/g, 'z m');\n};\n\n\n// Translate path to (x [, y])\n//\nSvgPath.prototype.translate = function (x, y) {\n  this.__stack.push(matrix().translate(x, y || 0));\n  return this;\n};\n\n\n// Scale path to (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.scale = function (sx, sy) {\n  this.__stack.push(matrix().scale(sx, (!sy && (sy !== 0)) ? sx : sy));\n  return this;\n};\n\n\n// Rotate path around point (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.rotate = function (angle, rx, ry) {\n  this.__stack.push(matrix().rotate(angle, rx || 0, ry || 0));\n  return this;\n};\n\n\n// Apply matrix transform (array of 6 elements)\n//\nSvgPath.prototype.matrix = function (m) {\n  this.__stack.push(matrix().matrix(m));\n  return this;\n};\n\n\n// Transform path according to \"transform\" attr of SVG spec\n//\nSvgPath.prototype.transform = function (transformString) {\n  if (!transformString.trim()) {\n    return this;\n  }\n  this.__stack.push(transformParse(transformString));\n  return this;\n};\n\n\n// Round coords with given decimal precition.\n// 0 by default (to integers)\n//\nSvgPath.prototype.round = function (d) {\n  var contourStartDeltaX = 0, contourStartDeltaY = 0, deltaX = 0, deltaY = 0, l;\n\n  d = d || 0;\n\n  this.__evaluateStack();\n\n  this.segments.forEach(function (s) {\n    var isRelative = (s[0].toLowerCase() === s[0]), t;\n\n    switch (s[0]) {\n      case 'H':\n      case 'h':\n        if (isRelative) { s[1] += deltaX; }\n        deltaX = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'V':\n      case 'v':\n        if (isRelative) { s[1] += deltaY; }\n        deltaY = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'Z':\n      case 'z':\n        deltaX = contourStartDeltaX;\n        deltaY = contourStartDeltaY;\n        return;\n\n      case 'M':\n      case 'm':\n        if (isRelative) {\n          s[1] += deltaX;\n          s[2] += deltaY;\n        }\n\n        deltaX = s[1] - s[1].toFixed(d);\n        deltaY = s[2] - s[2].toFixed(d);\n\n        contourStartDeltaX = deltaX;\n        contourStartDeltaY = deltaY;\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        return;\n\n      case 'A':\n      case 'a':\n        // [cmd, rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        if (isRelative) {\n          s[6] += deltaX;\n          s[7] += deltaY;\n        }\n\n        deltaX = s[6] - s[6].toFixed(d);\n        deltaY = s[7] - s[7].toFixed(d);\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        s[3] = +s[3].toFixed(d + 2); // better precision for rotation\n        s[6] = +s[6].toFixed(d);\n        s[7] = +s[7].toFixed(d);\n        return;\n\n      default:\n        // a c l q s t\n        l = s.length;\n\n        if (isRelative) {\n          s[l - 2] += deltaX;\n          s[l - 1] += deltaY;\n        }\n\n        deltaX = s[l - 2] - s[l - 2].toFixed(d);\n        deltaY = s[l - 1] - s[l - 1].toFixed(d);\n\n        s.forEach(function (val, i) {\n          if (!i) { return; }\n          s[i] = +s[i].toFixed(d);\n        });\n        return;\n    }\n  });\n\n  return this;\n};\n\n\n// Apply iterator function to all segments. If function returns result,\n// current segment will be replaced to array of returned segments.\n// If empty array is returned, current regment will be deleted.\n//\nSvgPath.prototype.iterate = function (iterator, keepLazyStack) {\n  var segments = this.segments,\n      replacements = {},\n      needReplace = false,\n      lastX = 0,\n      lastY = 0,\n      countourStartX = 0,\n      countourStartY = 0;\n  var i, j, isRelative, newSegments;\n\n  if (!keepLazyStack) {\n    this.__evaluateStack();\n  }\n\n  segments.forEach(function (s, index) {\n\n    var res = iterator(s, index, lastX, lastY);\n\n    if (Array.isArray(res)) {\n      replacements[index] = res;\n      needReplace = true;\n    }\n\n    var isRelative = (s[0] === s[0].toLowerCase());\n\n    // calculate absolute X and Y\n    switch (s[0]) {\n      case 'm':\n      case 'M':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        lastY = s[2] + (isRelative ? lastY : 0);\n        countourStartX = lastX;\n        countourStartY = lastY;\n        return;\n\n      case 'h':\n      case 'H':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        return;\n\n      case 'v':\n      case 'V':\n        lastY = s[1] + (isRelative ? lastY : 0);\n        return;\n\n      case 'z':\n      case 'Z':\n        // That make sence for multiple contours\n        lastX = countourStartX;\n        lastY = countourStartY;\n        return;\n\n      default:\n        lastX = s[s.length - 2] + (isRelative ? lastX : 0);\n        lastY = s[s.length - 1] + (isRelative ? lastY : 0);\n    }\n  });\n\n  // Replace segments if iterator return results\n\n  if (!needReplace) { return this; }\n\n  newSegments = [];\n\n  for (i = 0; i < segments.length; i++) {\n    if (typeof replacements[i] !== 'undefined') {\n      for (j = 0; j < replacements[i].length; j++) {\n        newSegments.push(replacements[i][j]);\n      }\n    } else {\n      newSegments.push(segments[i]);\n    }\n  }\n\n  this.segments = newSegments;\n\n  return this;\n};\n\n\n// Converts segments from relative to absolute\n//\nSvgPath.prototype.abs = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameUC = name.toUpperCase(),\n        i;\n\n    // Skip absolute commands\n    if (name === nameUC) { return; }\n\n    s[0] = nameUC;\n\n    switch (name) {\n      case 'v':\n        // v has shifted coords parity\n        s[1] += y;\n        return;\n\n      case 'a':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] += x;\n        s[7] += y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] += i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts segments from absolute to relative\n//\nSvgPath.prototype.rel = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameLC = name.toLowerCase(),\n        i;\n\n    // Skip relative commands\n    if (name === nameLC) { return; }\n\n    // Don't touch the first M to avoid potential confusions.\n    if (index === 0 && name === 'M') { return; }\n\n    s[0] = nameLC;\n\n    switch (name) {\n      case 'V':\n        // V has shifted coords parity\n        s[1] -= y;\n        return;\n\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] -= x;\n        s[7] -= y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] -= i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts arcs to cubic bÃ©zier curves\n//\nSvgPath.prototype.unarc = function () {\n  this.iterate(function (s, index, x, y) {\n    var i, new_segments, nextX, nextY, result = [], name = s[0];\n\n    // Skip anything except arcs\n    if (name !== 'A' && name !== 'a') { return null; }\n\n    if (name === 'a') {\n      // convert relative arc coordinates to absolute\n      nextX = x + s[6];\n      nextY = y + s[7];\n    } else {\n      nextX = s[6];\n      nextY = s[7];\n    }\n\n    new_segments = a2c(x, y, nextX, nextY, s[4], s[5], s[1], s[2], s[3]);\n\n    // Degenerated arcs can be ignored by renderer, but should not be dropped\n    // to avoid collisions with `S A S` and so on. Replace with empty line.\n    if (new_segments.length === 0) {\n      return [ [ s[0] === 'a' ? 'l' : 'L', s[6], s[7] ] ];\n    }\n\n    new_segments.forEach(function (s) {\n      result.push([ 'C', s[2], s[3], s[4], s[5], s[6], s[7] ]);\n    });\n\n    return result;\n  });\n\n  return this;\n};\n\n\n// Converts smooth curves (with missed control point) to generic curves\n//\nSvgPath.prototype.unshort = function () {\n  var segments = this.segments;\n  var prevControlX, prevControlY, prevSegment;\n  var curControlX, curControlY;\n\n  // TODO: add lazy evaluation flag when relative commands supported\n\n  this.iterate(function (s, idx, x, y) {\n    var name = s[0], nameUC = name.toUpperCase(), isRelative;\n\n    // First command MUST be M|m, it's safe to skip.\n    // Protect from access to [-1] for sure.\n    if (!idx) { return; }\n\n    if (nameUC === 'T') { // quadratic curve\n      isRelative = (name === 't');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'Q') {\n        prevControlX = prevSegment[1] - x;\n        prevControlY = prevSegment[2] - y;\n      } else if (prevSegment[0] === 'q') {\n        prevControlX = prevSegment[1] - prevSegment[3];\n        prevControlY = prevSegment[2] - prevSegment[4];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'q' : 'Q',\n        curControlX, curControlY,\n        s[1], s[2]\n      ];\n\n    } else if (nameUC === 'S') { // cubic curve\n      isRelative = (name === 's');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'C') {\n        prevControlX = prevSegment[3] - x;\n        prevControlY = prevSegment[4] - y;\n      } else if (prevSegment[0] === 'c') {\n        prevControlX = prevSegment[3] - prevSegment[5];\n        prevControlY = prevSegment[4] - prevSegment[6];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'c' : 'C',\n        curControlX, curControlY,\n        s[1], s[2], s[3], s[4]\n      ];\n    }\n  });\n\n  return this;\n};\n\n\nmodule.exports = SvgPath;\n","'use strict';\n\nmodule.exports = require('./lib/svgpath');\n","import svgpath from 'svgpath';\n\nexport default function applyTransforms ( node, transforms ) {\n\tif ( node.attributes.transform ) {\n\t\ttransforms = transforms.concat( node.attributes.transform );\n\t\tdelete node.attributes.transform;\n\t}\n\n\tconst transformString = transforms.join( ' ' );\n\n\tif ( node.name === 'path' ) {\n\t\tnode.attributes.d = svgpath( node.attributes.d )\n\t\t\t.transform( transformString )\n\t\t\t.round( 10 )\n\t\t\t.toString();\n\t} else if ( transformString ) {\n\t\tnode.attributes.transform = transformString;\n\t}\n}\n","import convertToPath from './convertToPath.js';\nimport applyAttributes from './applyAttributes.js';\nimport applyClasses from './applyClasses.js';\nimport applyTransforms from './applyTransforms.js';\nimport { assign, cloneExcept } from './utils/object.js';\n\nconst ignore = [ 'defs', 'title' ];\nconst noninheritable = [ 'id', 'class', 'style', 'transform' ];\n\nexport default function walk ( node, paths, transforms, classes, attributes ) {\n\tif ( node.name === 'svg' ) {\n\t\tconst _transforms = transforms.slice();\n\t\tnode.children.forEach( child => {\n\t\t\twalk( child, paths, _transforms, assign( {}, classes ), assign( {}, attributes ) );\n\t\t});\n\t}\n\n\telse if ( node.name === 'g' ) {\n\t\ttransforms = node.attributes.transform ? transforms.concat( node.attributes.transform ) : transforms;\n\n\t\tif ( node.attributes.class ) {\n\t\t\tnode.attributes.class.split( ' ' )\n\t\t\t\t.filter( Boolean )\n\t\t\t\t.forEach( className => classes[ className ] = true );\n\t\t}\n\n\t\tnode.children.forEach( child => {\n\t\t\tconst _classes = assign( {}, classes );\n\n\t\t\tconst _attributes = assign(\n\t\t\t\tcloneExcept( attributes, noninheritable ),\n\t\t\t\tcloneExcept( node.attributes, noninheritable )\n\t\t\t);\n\n\t\t\twalk( child, paths, transforms, _classes, _attributes );\n\t\t});\n\t}\n\n\telse if ( ~ignore.indexOf( node.name ) ) {\n\t\tapplyAttributes( node, attributes );\n\t\tapplyClasses( node, classes );\n\t\tapplyTransforms( node, transforms );\n\t\tpaths.push( node );\n\t}\n\n\telse {\n\t\tapplyAttributes( node, attributes );\n\t\tapplyClasses( node, classes );\n\n\t\tif ( node.name !== 'path' ) {\n\t\t\tnode = convertToPath( node );\n\t\t}\n\n\t\tapplyTransforms( node, transforms );\n\t\tpaths.push( node );\n\t}\n}\n","function stringifyAttributes ( attributes ) {\n\treturn Object.keys( attributes ).map( key => ` ${key}=\"${attributes[key]}\"` ).join( '' );\n}\n\nexport default function stringify ( node, indent ) {\n\tif ( typeof node === 'string' ) return node;\n\n\tconst attributes = stringifyAttributes( node.attributes );\n\n\tlet str = `${indent}<${node.name}${attributes}`;\n\n\tif ( node.children && node.children.length ) {\n\t\tstr += '>';\n\t\tlet prefix = '\\n';\n\n\t\tfor ( let child of node.children ) {\n\t\t\tif ( typeof child === 'string' ) {\n\t\t\t\tstr += child;\n\t\t\t\tprefix = '';\n\t\t\t} else {\n\t\t\t\tstr += prefix + stringify( child, indent + '\\t' );\n\t\t\t\tprefix = '\\n';\n\t\t\t}\n\t\t}\n\n\t\tif ( prefix ) prefix += indent;\n\n\t\tstr += `${prefix}</${node.name}>`;\n\t} else if ( node.val ) {\n\t\tstr += `>${node.val}</${node.name}>`;\n\t} else {\n\t\tstr += '/>';\n\t}\n\n\treturn str;\n}\n","import { parse as parseSvg } from 'svg-parser';\nimport walk from './walk.js';\nimport stringify from './stringify.js';\n\nclass Pathologist {\n\tconstructor ( source ) {\n\t\tthis.source = parseSvg( source );\n\n\t\tthis.target = {\n\t\t\tname: this.source.name,\n\t\t\tattributes: Object.assign( {}, this.source.attributes ),\n\t\t\tchildren: []\n\t\t};\n\n\t\twalk( this.source, this.target.children, [], {}, {} );\n\t}\n\n\ttoString () {\n\t\treturn stringify( this.target, '' );\n\t}\n}\n\nexport function transform ( source ) {\n\treturn new Pathologist( source ).toString();\n}\n\nexport function parse ( source ) {\n\tconst pathologist = new Pathologist( source );\n\n\treturn {\n\t\tpaths: pathologist.target.children.filter( node => node.name === 'path' ).map( node => node.attributes ),\n\t\ttoString () {\n\t\t\treturn pathologist.toString();\n\t\t}\n\t};\n}\n"],"names":["parse","const","let","this","commonjsHelpers.interopDefault","convertToPath","parseSvg"],"mappings":"AAAA,SAAS,UAAU,GAAG,MAAM,GAAG;CAC9B,IAAI,aAAa,GAAG,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;;CAEzC,IAAI,KAAK,GAAG,CAAC,CAAC;CACd,IAAI,UAAU,GAAG,aAAa,CAAC,GAAG,EAAE,WAAW,IAAI,EAAE,CAAC,GAAG;EACxD,IAAI,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;EAClC,IAAI,KAAK,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC;;EAEhD,KAAK,GAAG,GAAG,CAAC;EACZ,OAAO,KAAK,CAAC;EACb,CAAC,CAAC;;CAEH,IAAI,CAAC,GAAG,CAAC,CAAC;;CAEV,SAAS,aAAa,GAAG,KAAK,EAAE,KAAK,GAAG;EACvC,OAAO,KAAK,CAAC,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC;EACjD;;CAED,SAAS,WAAW,GAAG,KAAK,EAAE,KAAK,GAAG;EACrC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;EAC3E;;CAED,OAAO,SAAS,MAAM,GAAG,MAAM,EAAE,UAAU,GAAG;EAC7C,KAAK,OAAO,MAAM,KAAK,QAAQ,GAAG;GACjC,MAAM,GAAG,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,IAAI,CAAC,EAAE,CAAC;GACnD;;EAED,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;;EAE1B,IAAI,CAAC,GAAG,MAAM,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;EAErC,QAAQ,KAAK,GAAG;GACf,KAAK,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,OAAO,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC;;GAE1E,CAAC,IAAI,CAAC,CAAC;GACP,KAAK,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;GACtB;EACD,CAAC;CACF;;AAED,SAAS,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,UAAU,GAAG;CAC9C,OAAO,UAAU,EAAE,MAAM,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC;CAClD;;AAED,IAAI,mBAAmB,GAAG,eAAe,CAAC;AAC1C,IAAI,UAAU,GAAG,YAAY,CAAC;AAC9B,IAAI,SAAS,GAAG,MAAM,CAAC;;AAEvB,SAAS,MAAM,GAAG,GAAG,EAAE,CAAC,GAAG;CAC1B,IAAI,MAAM,GAAG,EAAE,CAAC;CAChB,QAAQ,CAAC,EAAE,GAAG,MAAM,IAAI,GAAG,CAAC;CAC5B,OAAO,MAAM,CAAC;CACd;;AAED,SAASA,OAAK,GAAG,MAAM,GAAG;CACzB,IAAI,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC;CACxC,IAAI,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;;CAErC,IAAI,KAAK,GAAG,EAAE,CAAC;;CAEf,IAAI,KAAK,GAAG,OAAO,CAAC;CACpB,IAAI,cAAc,GAAG,IAAI,CAAC;CAC1B,IAAI,IAAI,GAAG,IAAI,CAAC;;CAEhB,SAAS,KAAK,GAAG,OAAO,GAAG;EAC1B,IAAI,GAAG,GAAG,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;EAC9B,IAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;EACpB,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;EACxB,IAAI,MAAM,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,KAAK,EAAE,EAAE,OAAO,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;EAC/G,IAAI,UAAU,GAAG,WAAW,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/C,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;EAC9B,IAAI,SAAS,GAAG,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE5C,IAAI,OAAO,GAAG,EAAE,GAAG,UAAU,GAAG,SAAS,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,CAAC;;EAE5F,MAAM,IAAI,KAAK,EAAE,CAAC,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,MAAM,GAAG,qJAAqJ,GAAG,OAAO,CAAC,EAAE,CAAC;EAC5N;;CAED,SAAS,OAAO,IAAI;EACnB,IAAI,IAAI,GAAG,EAAE,CAAC;EACd,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;;EAEvE,KAAK,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG;GACxB,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;GACrC;;EAED,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG;GACxB,OAAO,GAAG,CAAC;GACX;;EAED,OAAO,OAAO,CAAC;EACf;;CAED,SAAS,GAAG,IAAI;EACf,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG;GACxB,OAAO,OAAO,CAAC;GACf;;EAED,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG;GACxB,OAAO,UAAU,CAAC;GAClB;;EAED,IAAI,IAAI,GAAG,OAAO,EAAE,CAAC;;EAErB,IAAI,OAAO,GAAG;GACb,IAAI,EAAE,IAAI;GACV,UAAU,EAAE,EAAE;GACd,QAAQ,EAAE,EAAE;GACZ,CAAC;;EAEF,KAAK,cAAc,GAAG;GACrB,cAAc,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;GACxC,MAAM;GACN,IAAI,GAAG,OAAO,CAAC;GACf;;EAED,IAAI,SAAS,CAAC;EACd,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,SAAS,GAAG,YAAY,EAAE,EAAE,GAAG;GAC7D,OAAO,CAAC,UAAU,EAAE,SAAS,CAAC,IAAI,EAAE,GAAG,SAAS,CAAC,KAAK,CAAC;GACvD;;EAED,IAAI,WAAW,GAAG,KAAK,CAAC;;EAExB,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG;GACxB,CAAC,IAAI,CAAC,CAAC;GACP,WAAW,GAAG,IAAI,CAAC;GACnB;;EAED,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG;GACxB,KAAK,EAAE,YAAY,EAAE,CAAC;GACtB;;EAED,KAAK,CAAC,WAAW,GAAG;GACnB,cAAc,GAAG,OAAO,CAAC;GACzB,KAAK,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;GACtB;;EAED,OAAO,OAAO,CAAC;EACf;;CAED,SAAS,OAAO,IAAI;EACnB,IAAI,KAAK,GAAG,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC;EACvC,KAAK,CAAC,CAAC,KAAK,GAAG,KAAK,EAAE,cAAc,EAAE,CAAC;;EAEvC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;EACd,OAAO,OAAO,CAAC;EACf;;CAED,SAAS,UAAU,IAAI;EACtB,IAAI,IAAI,GAAG,OAAO,EAAE,CAAC;;EAErB,KAAK,CAAC,IAAI,GAAG,KAAK,EAAE,mBAAmB,EAAE,CAAC;;EAE1C,KAAK,IAAI,KAAK,cAAc,CAAC,IAAI,GAAG;GACnC,KAAK,EAAE,CAAC,yBAAyB,GAAG,IAAI,GAAG,0BAA0B,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;GACvG;;EAED,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG;GACxB,KAAK,EAAE,YAAY,EAAE,CAAC;GACtB;;EAED,KAAK,CAAC,GAAG,EAAE,CAAC;EACZ,cAAc,GAAG,KAAK,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;;EAE3C,OAAO,OAAO,CAAC;EACf;;CAED,SAAS,OAAO,IAAI;EACnB,IAAI,IAAI,GAAG,EAAE,CAAC;EACd,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,mBAAmB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;;EAE3F,OAAO,IAAI,CAAC;EACZ;;CAED,SAAS,YAAY,IAAI;EACxB,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,IAAI,CAAC;EACjD,WAAW,EAAE,CAAC;;EAEd,IAAI,IAAI,GAAG,OAAO,EAAE,CAAC;EACrB,KAAK,CAAC,IAAI,GAAG,OAAO,IAAI,CAAC;;EAEzB,IAAI,KAAK,GAAG,IAAI,CAAC;;EAEjB,WAAW,EAAE,CAAC;EACd,KAAK,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG;GACxB,CAAC,IAAI,CAAC,CAAC;GACP,WAAW,EAAE,CAAC;;GAEd,KAAK,GAAG,iBAAiB,EAAE,CAAC;GAC5B,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC;GACtC;;EAED,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;EACpC;;CAED,SAAS,iBAAiB,IAAI;EAC7B,OAAO,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE;GACjC,uBAAuB,EAAE;GACzB,yBAAyB,EAAE,CAAC;EAC7B;;CAED,SAAS,yBAAyB,IAAI;EACrC,IAAI,KAAK,GAAG,EAAE,CAAC;EACf,GAAG;GACF,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;GACrB,KAAK,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG;IACnD,OAAO,KAAK,CAAC;IACb;;GAED,KAAK,IAAI,IAAI,CAAC;GACd,CAAC,IAAI,CAAC,CAAC;GACP,SAAS,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG;;EAE9B,OAAO,KAAK,CAAC;EACb;;CAED,SAAS,uBAAuB,IAAI;EACnC,IAAI,SAAS,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;;EAE9B,IAAI,KAAK,GAAG,EAAE,CAAC;EACf,IAAI,OAAO,GAAG,KAAK,CAAC;;EAEpB,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG;GAC3B,IAAI,IAAI,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;GACzB,KAAK,IAAI,KAAK,SAAS,IAAI,CAAC,OAAO,GAAG;IACrC,OAAO,KAAK,CAAC;IACb;;GAED,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,OAAO,GAAG;IAChC,OAAO,GAAG,IAAI,CAAC;IACf;;GAED,KAAK,IAAI,OAAO,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;GACxC,OAAO,GAAG,KAAK,CAAC;GAChB;EACD;;CAED,SAAS,WAAW,IAAI;EACvB,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;EACnE;;CAED,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC;CACxB,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,GAAG;EAC3B,KAAK,CAAC,KAAK,GAAG,KAAK,EAAE,sBAAsB,EAAE,CAAC;EAC9C,KAAK,GAAG,KAAK,EAAE,CAAC;EAChB,CAAC,IAAI,CAAC,CAAC;EACP;;CAED,KAAK,KAAK,KAAK,OAAO,GAAG;EACxB,KAAK,EAAE,yBAAyB,EAAE,CAAC;EACnC;;CAED,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;CACpD,OAAO,IAAI,CAAC;CACZ,AAED;;AChQAC,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,MAAM,GAAG,MAAM,GAAe;;;;CACtE,OAAO,CAAC,OAAO,EAAE,UAAA,MAAM,EAAC;EACvB,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,CAAC,OAAO,EAAE,UAAA,GAAG,EAAC;GAClC,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,EAAE,GAAG,EAAE,CAAC;GAC9B,CAAC,CAAC;EACH,CAAC,CAAC;CACH,CAAC;;AAEF,SAAS,WAAW,GAAG,GAAG,EAAE,KAAK,GAAG;CACnCC,IAAI,KAAK,GAAG,EAAE,CAAC;CACf,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,UAAA,IAAI,EAAC;EAChC,KAAK,CAAC,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC;EAC3D,CAAC,CAAC;CACH,OAAO,KAAK,CAAC;CACb,AAED;;ACdA,SAAS,IAAI,GAAG,MAAM,GAAG;CACxBA,IAAI,IAAI,GAAG,EAAE,CAAC;CACdA,IAAI,MAAM,GAAG,GAAG,CAAC;;CAEjB,MAAMA,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,GAAG;EAC5C,IAAI,IAAI,EAAC,GAAE,MAAM,IAAG,MAAM,CAAC,CAAC,CAAC,CAAA,MAAE,IAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAG;EAC/C,MAAM,GAAG,GAAG,CAAC;EACb;;CAED,OAAO,IAAI,CAAC;CACZ;;AAEDD,IAAM,UAAU,GAAG;CAClB,OAAO,EAAE,UAAA,UAAU,EAAC;EACnBA,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;EAC9BA,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;EAC9BA,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;EAC9BA,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;;EAE9BA,IAAM,IAAI,GAAG,WAAW,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;EACnE,IAAI,CAAC,CAAC,GAAG,GAAE,IAAE,EAAE,GAAG,EAAE,CAAA,MAAE,GAAE,EAAE,MAAE,GAAE,EAAE,MAAE,GAAE,EAAE,YAAQ,IAAE,EAAE,GAAG,CAAC,CAAA,QAAI,GAAE,EAAE,MAAE,GAAE,EAAE,YAAQ,IAAE,EAAE,GAAG,CAAC,CAAC,CAAA,OAAG,CAAE;;EAE1F,OAAO,IAAI,CAAC;EACZ;;CAED,MAAM,EAAE,UAAA,UAAU,EAAC;EAClBA,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;EAC9BA,IAAM,EAAE,GAAG,UAAU,CAAC,EAAE,IAAI,CAAC,CAAC;EAC9BA,IAAM,CAAC,GAAG,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;;EAE5BA,IAAM,IAAI,GAAG,WAAW,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC;EAC5D,IAAI,CAAC,CAAC,GAAG,GAAE,IAAE,EAAE,GAAG,CAAC,CAAA,MAAE,GAAE,EAAE,MAAE,GAAE,CAAC,MAAE,GAAE,CAAC,YAAQ,IAAE,CAAC,GAAG,CAAC,CAAA,QAAI,GAAE,CAAC,MAAE,GAAE,CAAC,YAAQ,IAAE,CAAC,GAAG,CAAC,CAAC,CAAA,OAAG,CAAE;;EAEnF,OAAO,IAAI,CAAC;EACZ;;CAED,OAAO,EAAE,UAAA,UAAU,EAAC;EACnBA,IAAM,IAAI,GAAG,UAAU,CAAC,QAAQ,EAAE,UAAU,EAAE,CAAC;EAC/C,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC;;EAEd,OAAO,IAAI,CAAC;EACZ;;CAED,QAAQ,EAAE,UAAA,UAAU,EAAC;EACpBA,IAAM,IAAI,GAAG,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC;EACjD,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,CAAC;;EAE5D,OAAO,IAAI,CAAC;EACZ;;CAED,IAAI,EAAE,UAAA,UAAU,EAAC;EAChBA,IAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;EAC7BA,IAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;EAC7BA,IAAM,KAAK,GAAG,CAAC,UAAU,CAAC,KAAK,IAAI,CAAC,CAAC;EACrCA,IAAM,MAAM,GAAG,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC;;;;EAIvCA,IAAM,IAAI,GAAG,WAAW,EAAE,UAAU,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC;;;EAGpF,IAAI,CAAC,CAAC,GAAG,GAAE,GAAE,CAAC,MAAE,GAAE,CAAC,MAAE,GAAE,KAAK,UAAM,GAAE,MAAM,MAAE,IAAE,CAAC,KAAK,CAAA,QAAI,CAAE;;EAE1D,OAAO,IAAI,CAAC;EACZ;;CAED,IAAI,EAAE,UAAA,UAAU,EAAC;EAChBA,IAAM,IAAI,GAAG,WAAW,EAAE,UAAU,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;EAClE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,UAAU,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;;EAElG,OAAO,IAAI,CAAC;EACZ;;;CAGD,CAAC;;AAEF,AAAe,SAAS,OAAO,GAAG,IAAI,GAAG;CACxCA,IAAM,SAAS,GAAG,UAAU,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;CAC1C,KAAK,SAAS,GAAG;EAChBA,IAAM,UAAU,GAAG,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;;EAEhD,OAAO;GACN,IAAI,EAAE,MAAM;GACZ,YAAA,UAAU;GACV,CAAC;EACF;;CAED,MAAM,IAAI,KAAK,EAAE,CAAA,QAAO,IAAE,IAAI,CAAC,IAAI,CAAA,MAAE,CAAC,EAAE,CAAC;CACzC;;ACxFc,SAAS,eAAe,GAAG,IAAI,EAAE,UAAU,GAAG;CAC5D,IAAI,CAAC,UAAU,GAAG,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;CACxD;;ACFc,SAAS,YAAY,GAAG,IAAI,EAAE,OAAO,GAAG;CACtD,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG;EAC5B,OAAO,GAAG,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC;;EAEhC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE;IAChC,MAAM,EAAE,OAAO,EAAE;IACjB,OAAO,EAAE,UAAA,SAAS,EAAC,SAAG,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,GAAA,EAAE,CAAC;EACtD;;CAEDA,IAAM,SAAS,GAAG,MAAM,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;;CAErD,KAAK,SAAS,GAAG;EAChB,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,SAAS,CAAC;EAClC;CACD;;;;;;;;;;;AChBD,YAAY,CAAC;;;AAGb,IAAI,WAAW,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;;AAEvF,IAAI,cAAc,GAAG;EACnB,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;EACtE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;CAC/D,CAAC;;AAEF,SAAS,OAAO,CAAC,EAAE,EAAE;EACnB,OAAO,CAAC,EAAE,KAAK,IAAI,MAAM,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,MAAM,CAAC,KAAK,EAAE,KAAK,MAAM,CAAC;;KAExE,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC;KAChF,EAAE,IAAI,MAAM,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;CACrD;;AAED,SAAS,SAAS,CAAC,IAAI,EAAE;;EAEvB,QAAQ,IAAI,GAAG,IAAI;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI,QAAQ;IACjB,KAAK,IAAI;MACP,OAAO,IAAI,CAAC;GACf;EACD,OAAO,KAAK,CAAC;CACd;;AAED,SAAS,OAAO,CAAC,IAAI,EAAE;EACrB,QAAQ,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE,EAAE;CACnC;;AAED,SAAS,YAAY,CAAC,IAAI,EAAE;EAC1B,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE;UACxB,IAAI,KAAK,IAAI;UACb,IAAI,KAAK,IAAI;UACb,IAAI,KAAK,IAAI,CAAC;CACvB;;;AAGD,SAAS,KAAK,CAAC,IAAI,EAAE;EACnB,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC;EAChB,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC;EACnB,IAAI,CAAC,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC;EAC1B,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;EACjB,IAAI,CAAC,KAAK,IAAI,GAAG,CAAC;EAClB,IAAI,CAAC,GAAG,MAAM,EAAE,CAAC;EACjB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;EACtB,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC;CAClB;;AAED,SAAS,UAAU,CAAC,KAAK,EAAE;EACzB,OAAO,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;IAC7E,KAAK,CAAC,KAAK,EAAE,CAAC;GACf;CACF;;;AAGD,SAAS,SAAS,CAAC,KAAK,EAAE;EACxB,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK;MACnB,KAAK,GAAG,KAAK;MACb,GAAG,GAAG,KAAK,CAAC,GAAG;MACf,SAAS,GAAG,KAAK;MACjB,UAAU,GAAG,KAAK;MAClB,UAAU,GAAG,KAAK;MAClB,MAAM,GAAG,KAAK;MACd,EAAE,CAAC;;EAEP,IAAI,KAAK,IAAI,GAAG,EAAE;IAChB,KAAK,CAAC,GAAG,GAAG,gCAAgC,GAAG,KAAK,GAAG,GAAG,CAAC;IAC3D,OAAO;GACR;EACD,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;EAElC,IAAI,EAAE,KAAK,IAAI,WAAW,EAAE,KAAK,IAAI,SAAS;IAC5C,KAAK,EAAE,CAAC;IACR,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACvD;;;;;EAKD,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,IAAI,SAAS;IACtC,KAAK,CAAC,GAAG,GAAG,uDAAuD,GAAG,KAAK,GAAG,GAAG,CAAC;IAClF,OAAO;GACR;;EAED,IAAI,EAAE,KAAK,IAAI,SAAS;IACtB,SAAS,IAAI,EAAE,KAAK,IAAI,QAAQ,CAAC;IACjC,KAAK,EAAE,CAAC;;IAER,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;IAEtD,IAAI,SAAS,IAAI,KAAK,GAAG,GAAG,EAAE;;MAE5B,IAAI,EAAE,IAAI,OAAO,CAAC,EAAE,CAAC,EAAE;QACrB,KAAK,CAAC,GAAG,GAAG,oEAAoE,GAAG,KAAK,GAAG,GAAG,CAAC;QAC/F,OAAO;OACR;KACF;;IAED,OAAO,KAAK,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MAC3D,KAAK,EAAE,CAAC;MACR,UAAU,GAAG,IAAI,CAAC;KACnB;IACD,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACvD;;EAED,IAAI,EAAE,KAAK,IAAI,SAAS;IACtB,MAAM,GAAG,IAAI,CAAC;IACd,KAAK,EAAE,CAAC;IACR,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MAC5C,KAAK,EAAE,CAAC;MACR,UAAU,GAAG,IAAI,CAAC;KACnB;IACD,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;GACvD;;EAED,IAAI,EAAE,KAAK,IAAI,WAAW,EAAE,KAAK,IAAI,SAAS;IAC5C,IAAI,MAAM,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,EAAE;MACxC,KAAK,CAAC,GAAG,GAAG,0CAA0C,GAAG,KAAK,GAAG,GAAG,CAAC;MACrE,OAAO;KACR;;IAED,KAAK,EAAE,CAAC;;IAER,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtD,IAAI,EAAE,KAAK,IAAI,WAAW,EAAE,KAAK,IAAI,SAAS;MAC5C,KAAK,EAAE,CAAC;KACT;IACD,IAAI,KAAK,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;MACxD,OAAO,KAAK,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE;QAC3D,KAAK,EAAE,CAAC;OACT;KACF,MAAM;MACL,KAAK,CAAC,GAAG,GAAG,0CAA0C,GAAG,KAAK,GAAG,GAAG,CAAC;MACrE,OAAO;KACR;GACF;;EAED,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;EACpB,KAAK,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC;CAChE;;;AAGD,SAAS,eAAe,CAAC,KAAK,EAAE;EAC9B,IAAI,GAAG,EAAE,KAAK,CAAC;;;;;;;EAOf,GAAG,KAAK,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;EACvC,KAAK,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;;EAE1B,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC;;EAExB,IAAI,KAAK,KAAK,GAAG,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;IACtC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACjD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACzB,KAAK,GAAG,GAAG,CAAC;IACZ,GAAG,GAAG,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,CAAC;GACjC;;EAED,IAAI,KAAK,KAAK,GAAG,EAAE;IACjB,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;GAC3C,MAAM;;IAEL,OAAO,MAAM,CAAC,MAAM,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;MAC1C,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;MACxE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;QACvB,MAAM;OACP;KACF;GACF;CACF;;;AAGD,SAAS,WAAW,CAAC,KAAK,EAAE;EAC1B,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,OAAO,EAAE,WAAW;YAC/B,WAAW,EAAE,CAAC,CAAC;;EAEzB,KAAK,CAAC,YAAY,GAAG,KAAK,CAAC,KAAK,CAAC;EACjC,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;EAE7C,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;IACvB,KAAK,CAAC,GAAG,GAAG,uBAAuB,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,WAAW,GAAG,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;IAChG,OAAO;GACR;;EAED,WAAW,GAAG,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;;EAEjE,KAAK,CAAC,KAAK,EAAE,CAAC;EACd,UAAU,CAAC,KAAK,CAAC,CAAC;;EAElB,KAAK,CAAC,IAAI,GAAG,EAAE,CAAC;;EAEhB,IAAI,CAAC,WAAW,EAAE;;IAEhB,eAAe,CAAC,KAAK,CAAC,CAAC;IACvB,OAAO;GACR;;EAED,WAAW,GAAG,KAAK,CAAC;;EAEpB,SAAS;IACP,KAAK,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;MAChC,SAAS,CAAC,KAAK,CAAC,CAAC;MACjB,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE;QACpB,OAAO;OACR;MACD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;;MAE7B,UAAU,CAAC,KAAK,CAAC,CAAC;MAClB,WAAW,GAAG,KAAK,CAAC;;MAEpB,IAAI,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,IAAI,SAAS;QAC3E,KAAK,CAAC,KAAK,EAAE,CAAC;QACd,UAAU,CAAC,KAAK,CAAC,CAAC;QAClB,WAAW,GAAG,IAAI,CAAC;OACpB;KACF;;;IAGD,IAAI,WAAW,EAAE;MACf,SAAS;KACV;;IAED,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,EAAE;MAC5B,MAAM;KACP;;;IAGD,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MACrD,MAAM;KACP;GACF;;EAED,eAAe,CAAC,KAAK,CAAC,CAAC;CACxB;;;;;;;;;AASD,MAAM,CAAC,OAAO,GAAG,SAAS,SAAS,CAAC,OAAO,EAAE;EAC3C,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC;EAC/B,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;;EAEpB,UAAU,CAAC,KAAK,CAAC,CAAC;;EAElB,OAAO,KAAK,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE;IAC7C,WAAW,CAAC,KAAK,CAAC,CAAC;GACpB;;EAED,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE;IACpB,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;;GAEnB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE;;IAE9B,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;MACxC,KAAK,CAAC,GAAG,GAAG,8CAA8C,CAAC;MAC3D,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;KACnB,MAAM;MACL,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC1B;GACF;;EAED,OAAO;IACL,GAAG,EAAE,KAAK,CAAC,GAAG;IACd,QAAQ,EAAE,KAAK,CAAC,MAAM;GACvB,CAAC;CACH,CAAC;;;;;;;;;;;AC5RF,YAAY,CAAC;;;;;AAKb,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE;EACvB,OAAO;IACL,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IAC7B,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACrC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;GACtC,CAAC;CACH;;;AAGD,SAAS,MAAM,GAAG;EAChB,IAAI,EAAE,IAAI,YAAY,MAAM,CAAC,EAAE,EAAE,OAAO,IAAI,MAAM,EAAE,CAAC,EAAE;EACvD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;EAChB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;CACnB;;;AAGD,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;EACrC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;IACpF,OAAO,IAAI,CAAC;GACb;EACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;EAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACnB,OAAO,IAAI,CAAC;CACb,CAAC;;;AAGF,MAAM,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;EAC7C,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;IACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;GACzC;EACD,OAAO,IAAI,CAAC;CACb,CAAC;;;AAGF,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;EACzC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;IACxB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;GACzC;EACD,OAAO,IAAI,CAAC;CACb,CAAC;;;AAGF,MAAM,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE;EACjD,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;EAElB,IAAI,KAAK,KAAK,CAAC,EAAE;IACf,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;;IAEvB,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;IAC5B,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;IAEpB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC/C,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;IAElB,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;GAC1B;EACD,OAAO,IAAI,CAAC;CACb,CAAC;;;AAGF,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE;EACxC,IAAI,KAAK,KAAK,CAAC,EAAE;IACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;GACrE;EACD,OAAO,IAAI,CAAC;CACb,CAAC;;;AAGF,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,KAAK,EAAE;EACxC,IAAI,KAAK,KAAK,CAAC,EAAE;IACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;GACrE;EACD,OAAO,IAAI,CAAC;CACb,CAAC;;;;;AAKF,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;;;EACrC,IAAI,IAAI,CAAC,KAAK,EAAE;IACd,OAAO,IAAI,CAAC,KAAK,CAAC;GACnB;;EAED,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;IACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAClC,OAAO,IAAI,CAAC,KAAK,CAAC;GACnB;;EAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;;EAE3B,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;IAC3B,OAAO,IAAI,CAAC,KAAK,CAAC;GACnB;;EAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1CE,MAAI,CAAC,KAAK,GAAG,OAAO,CAACA,MAAI,CAAC,KAAK,EAAEA,MAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;GACjD;;EAED,OAAO,IAAI,CAAC,KAAK,CAAC;CACnB,CAAC;;;;;;AAMF,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE;EAClD,IAAI,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;;;EAGd,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;;;;;;;EAO5C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;IACf,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;GAC7B;;EAED,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;;;EAGf,OAAO;IACL,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;GAC9C,CAAC;CACH,CAAC;;;AAGF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;;;;;;;;;;;AC/IxB,YAAY,CAAC;;;AAGb,IAAI,MAAM,GAAGC,4BAAmB,CAAC;;AAEjC,IAAI,UAAU,GAAG;EACf,MAAM,EAAE,IAAI;EACZ,KAAK,EAAE,IAAI;EACX,MAAM,EAAE,IAAI;EACZ,SAAS,EAAE,IAAI;EACf,KAAK,EAAE,IAAI;EACX,KAAK,EAAE,IAAI;CACZ,CAAC;;AAEF,IAAI,YAAY,MAAM,wEAAwE,CAAC;AAC/F,IAAI,eAAe,GAAG,QAAQ,CAAC;;;AAG/B,MAAM,CAAC,OAAO,GAAG,SAAS,cAAc,CAAC,eAAe,EAAE;EACxD,IAAI,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;EAC1B,IAAI,GAAG,EAAE,MAAM,CAAC;;;EAGhB,eAAe,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;;;IAG1D,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;;;IAG7B,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,WAAW,EAAE;MAC3C,GAAG,GAAG,IAAI,CAAC;MACX,OAAO;KACR;;;IAGD,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;MACpD,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC;KAChB,CAAC,CAAC;;;IAGH,QAAQ,GAAG;MACT,KAAK,QAAQ;QACX,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,OAAO;;MAET,KAAK,OAAO;QACV,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UACvB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACpC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UAC9B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACpC;QACD,OAAO;;MAET,KAAK,QAAQ;QACX,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UACvB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UAC9B,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAChD;QACD,OAAO;;MAET,KAAK,WAAW;QACd,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UACvB,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SAChC,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UAC9B,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACxC;QACD,OAAO;;MAET,KAAK,OAAO;QACV,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UACvB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;QACD,OAAO;;MAET,KAAK,OAAO;QACV,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;UACvB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;QACD,OAAO;KACV;GACF,CAAC,CAAC;;EAEH,OAAO,MAAM,CAAC;CACf,CAAC;;;;;;;;;;;;;ACpFF,YAAY,CAAC;;;AAGb,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;;;;;;;AAOtB,SAAS,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EACpC,IAAI,IAAI,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;EAC5C,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACxC,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACxC,IAAI,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;EAC7B,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC;;;EAG/B,IAAI,GAAG,IAAI,GAAG,EAAE,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE;EAC/B,IAAI,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,EAAE;;EAE/B,OAAO,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC9B;;;;;;;;AAQD,SAAS,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;;;;;;;EAOpE,IAAI,GAAG,IAAI,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE7C,IAAI,KAAK,KAAK,EAAE,GAAG,EAAE,CAAC;EACtB,IAAI,KAAK,KAAK,EAAE,GAAG,EAAE,CAAC;EACtB,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;EACvB,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC;;;;;;;EAOvB,IAAI,QAAQ,GAAG,CAAC,KAAK,GAAG,KAAK,KAAK,KAAK,GAAG,MAAM,CAAC,IAAI,KAAK,GAAG,MAAM,CAAC,CAAC;;EAErE,IAAI,QAAQ,GAAG,CAAC,EAAE;;IAEhB,QAAQ,GAAG,CAAC,CAAC;GACd;;EAED,QAAQ,MAAM,CAAC,KAAK,GAAG,MAAM,KAAK,KAAK,GAAG,MAAM,CAAC,CAAC;EAClD,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;EAEtD,IAAI,GAAG,GAAG,QAAQ,IAAI,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;EAClC,IAAI,GAAG,GAAG,QAAQ,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC;;;;;;;EAOlC,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;EAC3C,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;;;;;;EAM3C,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;EAC5B,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;EAC5B,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;EAC5B,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,IAAI,EAAE,CAAC;;EAE5B,IAAI,EAAE,GAAG,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;EACtC,IAAI,EAAE,GAAG,YAAY,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;EAE1C,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;IACtB,EAAE,IAAI,GAAG,CAAC;GACX;EACD,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;IACtB,EAAE,IAAI,GAAG,CAAC;GACX;;EAED,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CAC3B;;;;;;AAMD,SAAS,oBAAoB,CAAC,EAAE,EAAE,EAAE,EAAE;EACpC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE7B,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EACtB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EACtB,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;EAC3B,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;;EAE3B,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACvE;;AAED,MAAM,CAAC,OAAO,GAAG,SAAS,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE;EAC/D,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;EACpC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;;;;EAIpC,IAAI,GAAG,IAAI,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC7C,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE7C,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE;;IAE1B,OAAO,EAAE,CAAC;GACX;;EAED,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE;;IAExB,OAAO,EAAE,CAAC;GACX;;;;;EAKD,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAClB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;;EAElB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;EAC1D,IAAI,CAAC,GAAG,CAAC,EAAE;IACT,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;GACpB;;;;;EAKD,IAAI,EAAE,GAAG,cAAc,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;EAEtE,IAAI,MAAM,GAAG,EAAE,CAAC;EAChB,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;;;;;EAKf,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChE,EAAE,IAAI,QAAQ,CAAC;;EAEf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;IACjC,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;IAC1C,EAAE,IAAI,EAAE,CAAC;GACV;;;;;EAKD,OAAO,MAAM,CAAC,GAAG,CAAC,UAAU,KAAK,EAAE;IACjC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;MACxC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACrB,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;;;MAGrB,CAAC,IAAI,EAAE,CAAC;MACR,CAAC,IAAI,EAAE,CAAC;;;MAGR,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;MAC3B,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;;;MAG3B,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;MAC1B,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAED,OAAO,KAAK,CAAC;GACd,CAAC,CAAC;CACJ,CAAC;;;;;;;;;;;ACxLF,YAAY,CAAC;;;;;;AAMb,IAAI,OAAO,GAAG,YAAY,CAAC;;;;AAI3B,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC;;;;;AAK1B,SAAS,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;EAC3B,IAAI,EAAE,IAAI,YAAY,OAAO,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EAAE;EACnE,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;EACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;EACb,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;CACd;;;;;;;;;AASD,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE;;;;EAIzC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,CAAC;EACjE,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3B,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3B,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5B,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;;;;;EAK1C,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC7B,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;;EAGlC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;WACzD,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;EAGpE,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;;EAGrB,IAAI,CAAC,GAAG,OAAO,GAAG,EAAE,EAAE;;IAEpB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,OAAO,IAAI,CAAC;GACb;;;EAGD,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;EAElC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;;EAGjB,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;MACb,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;;EAElB,IAAI,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,OAAO;IAC5D,EAAE;;IAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;MACtC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC;;MAEZ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACb,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;;;EAGpB,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE;;IAEhB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GACzB,MAAM;;IAEL,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC;IACd,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GACzB;;EAED,OAAO,IAAI,CAAC;CACb,CAAC;;;;AAIF,OAAO,CAAC,SAAS,CAAC,YAAY,GAAG,YAAY;EAC3C,QAAQ,IAAI,CAAC,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,EAAE,EAAE;CACrE,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;;;;;;;;;;;;;;;;;;;ACvFzB,YAAY,CAAC;;;AAGb,IAAI,SAAS,QAAQA,0BAAuB,CAAC;AAC7C,IAAI,cAAc,GAAGA,0BAA4B,CAAC;AAClD,IAAI,MAAM,WAAWA,4BAAmB,CAAC;AACzC,IAAI,GAAG,cAAcA,0BAAgB,CAAC;AACtC,IAAI,OAAO,UAAUA,4BAAoB,CAAC;;;;;AAK1C,SAAS,OAAO,CAAC,IAAI,EAAE;EACrB,IAAI,EAAE,IAAI,YAAY,OAAO,CAAC,EAAE,EAAE,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE;;EAE7D,IAAI,MAAM,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;;;;EAI7B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;;;EAGhC,IAAI,CAAC,GAAG,QAAQ,MAAM,CAAC,GAAG,CAAC;;;EAG3B,IAAI,CAAC,OAAO,MAAM,EAAE,CAAC;CACtB;;;AAGD,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,CAAC,EAAE;EACxC,IAAI,IAAI,GAAG,IAAI;MACX,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,CAAC;;;EAGnC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;;EAEhC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;IACrC,IAAI,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,CAAC;;IAEhC,QAAQ,CAAC,CAAC,CAAC,CAAC;;;MAGV,KAAK,GAAG;QACN,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/B,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,MAAM;;MAER,KAAK,GAAG;QACN,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACjF,MAAM;;MAER,KAAK,GAAG;QACN,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC/B,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5D,MAAM;;MAER,KAAK,GAAG;QACN,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAChC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QACjF,MAAM;;MAER,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;;;;;;;;;;QAUN,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QACrB,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;;;QAGhD,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;UACrC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;SACzB;;;QAGD,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC;;;;QAIrC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;aACxC,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;UAC9C,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;UAClD,MAAM;SACP;;;QAGD,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;;UAEpB,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;SACnD,MAAM;;;UAGL,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;SAC7D;;QAED,MAAM;;MAER,KAAK,GAAG;;;QAGN,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;;QAEvB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QACnC,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7B,MAAM;;MAER;QACE,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;QAClB,MAAM,OAAO,EAAE,IAAI,EAAE,CAAC;QACtB,UAAU,IAAI,IAAI,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,CAAC;;;QAG3C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;UAChC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;UACvC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;KACJ;;IAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC;GAC/B,EAAE,IAAI,CAAC,CAAC;CACV,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,eAAe,GAAG,YAAY;;;EAC9C,IAAI,CAAC,EAAE,CAAC,CAAC;;EAET,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE;;EAErC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;IAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IAClB,OAAO;GACR;;EAED,CAAC,GAAG,MAAM,EAAE,CAAC;EACb,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;;EAExB,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE;IACf,CAAC,CAAC,MAAM,CAACD,MAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;GACrC;;EAED,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;CACnB,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;;;EACvC,IAAI,QAAQ,GAAG,EAAE,EAAE,OAAO,EAAE,GAAG,CAAC;;EAEhC,IAAI,CAAC,eAAe,EAAE,CAAC;;EAEvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;IAE7C,GAAG,GAAGA,MAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B,OAAO,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,KAAKA,MAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,OAAO,GAAGA,MAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAGA,MAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;GACpF;;EAED,OAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC;;;;;aAKd,OAAO,CAAC,uBAAuB,EAAE,IAAI,CAAC;aACtC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;;aAEpB,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;CAClC,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,CAAC,EAAE,CAAC,EAAE;EAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACjD,OAAO,IAAI,CAAC;CACb,CAAC;;;;;;AAMF,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,EAAE,EAAE,EAAE,EAAE;EAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;EACrE,OAAO,IAAI,CAAC;CACb,CAAC;;;;;;AAMF,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE;EAClD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5D,OAAO,IAAI,CAAC;CACb,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,CAAC,EAAE;EACtC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC,OAAO,IAAI,CAAC;CACb,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,eAAe,EAAE;EACvD,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,EAAE;IAC3B,OAAO,IAAI,CAAC;GACb;EACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC,CAAC;EACnD,OAAO,IAAI,CAAC;CACb,CAAC;;;;;;AAMF,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,CAAC,EAAE;EACrC,IAAI,kBAAkB,GAAG,CAAC,EAAE,kBAAkB,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC;;EAE9E,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;;EAEX,IAAI,CAAC,eAAe,EAAE,CAAC;;EAEvB,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;IACjC,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;;IAElD,QAAQ,CAAC,CAAC,CAAC,CAAC;MACV,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;QACN,IAAI,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE;QACnC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO;;MAET,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;QACN,IAAI,UAAU,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE;QACnC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO;;MAET,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;QACN,MAAM,GAAG,kBAAkB,CAAC;QAC5B,MAAM,GAAG,kBAAkB,CAAC;QAC5B,OAAO;;MAET,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;QACN,IAAI,UAAU,EAAE;UACd,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;UACf,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;SAChB;;QAED,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;QAEhC,kBAAkB,GAAG,MAAM,CAAC;QAC5B,kBAAkB,GAAG,MAAM,CAAC;;QAE5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO;;MAET,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;;QAEN,IAAI,UAAU,EAAE;UACd,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;UACf,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC;SAChB;;QAED,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAChC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;QAEhC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxB,OAAO;;MAET;;QAEE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;;QAEb,IAAI,UAAU,EAAE;UACd,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;UACnB,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC;SACpB;;QAED,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACxC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;QAExC,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAC,EAAE;UAC1B,IAAI,CAAC,CAAC,EAAE,EAAE,OAAO,EAAE;UACnB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SACzB,CAAC,CAAC;QACH,OAAO;KACV;GACF,CAAC,CAAC;;EAEH,OAAO,IAAI,CAAC;CACb,CAAC;;;;;;;AAOF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,QAAQ,EAAE,aAAa,EAAE;EAC7D,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ;MACxB,YAAY,GAAG,EAAE;MACjB,WAAW,GAAG,KAAK;MACnB,KAAK,GAAG,CAAC;MACT,KAAK,GAAG,CAAC;MACT,cAAc,GAAG,CAAC;MAClB,cAAc,GAAG,CAAC,CAAC;EACvB,IAAI,CAAC,EAAE,CAAC,EAAE,UAAU,EAAE,WAAW,CAAC;;EAElC,IAAI,CAAC,aAAa,EAAE;IAClB,IAAI,CAAC,eAAe,EAAE,CAAC;GACxB;;EAED,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE;;IAEnC,IAAI,GAAG,GAAG,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;IAE3C,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;MACtB,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;MAC1B,WAAW,GAAG,IAAI,CAAC;KACpB;;IAED,IAAI,UAAU,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;;;IAG/C,QAAQ,CAAC,CAAC,CAAC,CAAC;MACV,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;QACN,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QACxC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QACxC,cAAc,GAAG,KAAK,CAAC;QACvB,cAAc,GAAG,KAAK,CAAC;QACvB,OAAO;;MAET,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;QACN,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QACxC,OAAO;;MAET,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;QACN,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QACxC,OAAO;;MAET,KAAK,GAAG,CAAC;MACT,KAAK,GAAG;;QAEN,KAAK,GAAG,cAAc,CAAC;QACvB,KAAK,GAAG,cAAc,CAAC;QACvB,OAAO;;MAET;QACE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;QACnD,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC;KACtD;GACF,CAAC,CAAC;;;;EAIH,IAAI,CAAC,WAAW,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;;EAElC,WAAW,GAAG,EAAE,CAAC;;EAEjB,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpC,IAAI,OAAO,YAAY,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;MAC1C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAC3C,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OACtC;KACF,MAAM;MACL,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;GACF;;EAED,IAAI,CAAC,QAAQ,GAAG,WAAW,CAAC;;EAE5B,OAAO,IAAI,CAAC;CACb,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;;EAElC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;IACrC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;QAC3B,CAAC,CAAC;;;IAGN,IAAI,IAAI,KAAK,MAAM,EAAE,EAAE,OAAO,EAAE;;IAEhC,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;;IAEd,QAAQ,IAAI;MACV,KAAK,GAAG;;QAEN,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACV,OAAO;;MAET,KAAK,GAAG;;;QAGN,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACV,OAAO;;MAET;QACE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAC7B,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACvB;KACJ;GACF,EAAE,IAAI,CAAC,CAAC;;EAET,OAAO,IAAI,CAAC;CACb,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;;EAElC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;IACrC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;QACX,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE;QAC3B,CAAC,CAAC;;;IAGN,IAAI,IAAI,KAAK,MAAM,EAAE,EAAE,OAAO,EAAE;;;IAGhC,IAAI,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,GAAG,EAAE,EAAE,OAAO,EAAE;;IAE5C,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;;IAEd,QAAQ,IAAI;MACV,KAAK,GAAG;;QAEN,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACV,OAAO;;MAET,KAAK,GAAG;;;QAGN,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACV,OAAO;;MAET;QACE,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAC7B,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;SACvB;KACJ;GACF,EAAE,IAAI,CAAC,CAAC;;EAET,OAAO,IAAI,CAAC;CACb,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,YAAY;EACpC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;IACrC,IAAI,CAAC,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,GAAG,EAAE,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;;IAG5D,IAAI,IAAI,KAAK,GAAG,IAAI,IAAI,KAAK,GAAG,EAAE,EAAE,OAAO,IAAI,CAAC,EAAE;;IAElD,IAAI,IAAI,KAAK,GAAG,EAAE;;MAEhB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACjB,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAClB,MAAM;MACL,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KACd;;IAED,YAAY,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;;;IAIrE,IAAI,YAAY,CAAC,MAAM,KAAK,CAAC,EAAE;MAC7B,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;KACrD;;IAED,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;MAChC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;KAC1D,CAAC,CAAC;;IAEH,OAAO,MAAM,CAAC;GACf,CAAC,CAAC;;EAEH,OAAO,IAAI,CAAC;CACb,CAAC;;;;;AAKF,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;EACtC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;EAC7B,IAAI,YAAY,EAAE,YAAY,EAAE,WAAW,CAAC;EAC5C,IAAI,WAAW,EAAE,WAAW,CAAC;;;;EAI7B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,EAAE,UAAU,CAAC;;;;IAIzD,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,EAAE;;IAErB,IAAI,MAAM,KAAK,GAAG,EAAE;MAClB,UAAU,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;;MAE5B,WAAW,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;MAEhC,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC1B,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAClC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACnC,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACjC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAC/C,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;OAChD,MAAM;QACL,YAAY,GAAG,CAAC,CAAC;QACjB,YAAY,GAAG,CAAC,CAAC;OAClB;;MAED,WAAW,GAAG,CAAC,YAAY,CAAC;MAC5B,WAAW,GAAG,CAAC,YAAY,CAAC;;MAE5B,IAAI,CAAC,UAAU,EAAE;QACf,WAAW,IAAI,CAAC,CAAC;QACjB,WAAW,IAAI,CAAC,CAAC;OAClB;;MAED,QAAQ,CAAC,GAAG,CAAC,GAAG;QACd,UAAU,GAAG,GAAG,GAAG,GAAG;QACtB,WAAW,EAAE,WAAW;QACxB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;OACX,CAAC;;KAEH,MAAM,IAAI,MAAM,KAAK,GAAG,EAAE;MACzB,UAAU,IAAI,IAAI,KAAK,GAAG,CAAC,CAAC;;MAE5B,WAAW,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;;MAEhC,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QAC1B,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAClC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;OACnC,MAAM,IAAI,WAAW,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACjC,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;QAC/C,YAAY,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;OAChD,MAAM;QACL,YAAY,GAAG,CAAC,CAAC;QACjB,YAAY,GAAG,CAAC,CAAC;OAClB;;MAED,WAAW,GAAG,CAAC,YAAY,CAAC;MAC5B,WAAW,GAAG,CAAC,YAAY,CAAC;;MAE5B,IAAI,CAAC,UAAU,EAAE;QACf,WAAW,IAAI,CAAC,CAAC;QACjB,WAAW,IAAI,CAAC,CAAC;OAClB;;MAED,QAAQ,CAAC,GAAG,CAAC,GAAG;QACd,UAAU,GAAG,GAAG,GAAG,GAAG;QACtB,WAAW,EAAE,WAAW;QACxB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;OACvB,CAAC;KACH;GACF,CAAC,CAAC;;EAEH,OAAO,IAAI,CAAC;CACb,CAAC;;;AAGF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;;;;;;;;;;;ACrmBzB,YAAY,CAAC;;AAEb,MAAM,CAAC,OAAO,GAAGC,0BAAwB,CAAC;;;;;ACA3B,SAAS,eAAe,GAAG,IAAI,EAAE,UAAU,GAAG;CAC5D,KAAK,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG;EAChC,UAAU,GAAG,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC;EAC5D,OAAO,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;EACjC;;CAEDH,IAAM,eAAe,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;;CAE/C,KAAK,IAAI,CAAC,IAAI,KAAK,MAAM,GAAG;EAC3B,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE;IAC9C,SAAS,EAAE,eAAe,EAAE;IAC5B,KAAK,EAAE,EAAE,EAAE;IACX,QAAQ,EAAE,CAAC;EACb,MAAM,KAAK,eAAe,GAAG;EAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,eAAe,CAAC;EAC5C;CACD;;ACZDA,IAAM,MAAM,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC;AACnCA,IAAM,cAAc,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,CAAC;;AAE/D,AAAe,SAAS,IAAI,GAAG,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,GAAG;CAC7E,KAAK,IAAI,CAAC,IAAI,KAAK,KAAK,GAAG;EAC1BA,IAAM,WAAW,GAAG,UAAU,CAAC,KAAK,EAAE,CAAC;EACvC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAA,KAAK,EAAC;GAC5B,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,CAAC;GACnF,CAAC,CAAC;EACH;;MAEI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,GAAG;EAC7B,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,UAAU,CAAC;;EAErG,KAAK,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG;GAC5B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE;KAChC,MAAM,EAAE,OAAO,EAAE;KACjB,OAAO,EAAE,UAAA,SAAS,EAAC,SAAG,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,GAAA,EAAE,CAAC;GACtD;;EAED,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,UAAA,KAAK,EAAC;GAC5BA,IAAM,QAAQ,GAAG,MAAM,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC;;GAEvCA,IAAM,WAAW,GAAG,MAAM;IACzB,WAAW,EAAE,UAAU,EAAE,cAAc,EAAE;IACzC,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,cAAc,EAAE;IAC9C,CAAC;;GAEF,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,CAAC;GACxD,CAAC,CAAC;EACH;;MAEI,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG;EACxC,eAAe,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;EACpC,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;EAC9B,eAAe,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;EACpC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;EACnB;;MAEI;EACJ,eAAe,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;EACpC,YAAY,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;EAE9B,KAAK,IAAI,CAAC,IAAI,KAAK,MAAM,GAAG;GAC3B,IAAI,GAAGI,OAAa,EAAE,IAAI,EAAE,CAAC;GAC7B;;EAED,eAAe,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;EACpC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;EACnB;CACD;;ACxDD,SAAS,mBAAmB,GAAG,UAAU,GAAG;CAC3C,OAAO,MAAM,CAAC,IAAI,EAAE,UAAU,EAAE,CAAC,GAAG,EAAE,UAAA,GAAG,EAAC,UAAG,GAAE,GAAE,GAAG,QAAG,IAAE,UAAU,CAAC,GAAG,CAAC,CAAA,OAAE,CAAC,GAAA,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC;CACzF;;AAED,AAAe,SAAS,SAAS,GAAG,IAAI,EAAE,MAAM,GAAG;CAClD,KAAK,OAAO,IAAI,KAAK,QAAQ,GAAG,OAAO,IAAI,CAAC;;CAE5CJ,IAAM,UAAU,GAAG,mBAAmB,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC;;CAE1DC,IAAI,GAAG,GAAG,MAAS,MAAE,IAAE,IAAI,CAAC,IAAI,CAAA,GAAG,UAAU,CAAG;;CAEhD,KAAK,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG;EAC5C,GAAG,IAAI,GAAG,CAAC;EACXA,IAAI,MAAM,GAAG,IAAI,CAAC;;EAElB,MAAe,kBAAI,IAAI,CAAC,QAAQ,yBAAA,GAAG;GAA7BA,IAAI,KAAK;;GACd,KAAK,OAAO,KAAK,KAAK,QAAQ,GAAG;IAChC,GAAG,IAAI,KAAK,CAAC;IACb,MAAM,GAAG,EAAE,CAAC;IACZ,MAAM;IACN,GAAG,IAAI,MAAM,GAAG,SAAS,EAAE,KAAK,EAAE,MAAM,GAAG,IAAI,EAAE,CAAC;IAClD,MAAM,GAAG,IAAI,CAAC;IACd;GACD;;EAED,KAAK,MAAM,GAAG,MAAM,IAAI,MAAM,CAAC;;EAE/B,GAAG,IAAI,MAAS,OAAG,IAAE,IAAI,CAAC,IAAI,CAAA,MAAE,CAAE;EAClC,MAAM,KAAK,IAAI,CAAC,GAAG,GAAG;EACtB,GAAG,IAAI,GAAE,IAAE,IAAI,CAAC,GAAG,CAAA,OAAG,IAAE,IAAI,CAAC,IAAI,CAAA,MAAE,CAAE;EACrC,MAAM;EACN,GAAG,IAAI,IAAI,CAAC;EACZ;;CAED,OAAO,GAAG,CAAC;CACX;;AC/BD,IAAM,WAAW,GAAC,oBACN,GAAG,MAAM,GAAG;CACvB,IAAK,CAAC,MAAM,GAAGI,OAAQ,EAAE,MAAM,EAAE,CAAC;;CAElC,IAAK,CAAC,MAAM,GAAG;EACd,IAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI;EACvB,UAAW,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;EACxD,QAAS,EAAE,EAAE;EACZ,CAAC;;CAEH,IAAK,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;CACtD,CAAA;;AAEF,sBAAC,QAAQ,wBAAI;CACZ,OAAQ,SAAS,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC;CACpC,CAAA;;AAGF,AAAO,SAAS,SAAS,GAAG,MAAM,GAAG;CACpC,OAAO,IAAI,WAAW,EAAE,MAAM,EAAE,CAAC,QAAQ,EAAE,CAAC;CAC5C;;AAED,AAAO,SAAS,KAAK,GAAG,MAAM,GAAG;CAChCL,IAAM,WAAW,GAAG,IAAI,WAAW,EAAE,MAAM,EAAE,CAAC;;CAE9C,OAAO;EACN,KAAK,EAAE,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,UAAA,IAAI,EAAC,SAAG,IAAI,CAAC,IAAI,KAAK,MAAM,GAAA,EAAE,CAAC,GAAG,EAAE,UAAA,IAAI,EAAC,SAAG,IAAI,CAAC,UAAU,GAAA,EAAE;EACxG,QAAQ,mBAAA,IAAI;GACX,OAAO,WAAW,CAAC,QAAQ,EAAE,CAAC;GAC9B;EACD,CAAC;CACF;;"}